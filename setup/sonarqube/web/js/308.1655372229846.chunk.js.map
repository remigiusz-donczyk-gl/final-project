{"version":3,"sources":["webpack:///./src/main/js/api/newCodePeriod.ts","webpack:///./src/main/js/apps/projectBaseline/utils.ts","webpack:///./src/main/js/apps/projectBaseline/components/BaselineSettingDays.tsx","webpack:///./src/main/js/apps/projectBaseline/components/BaselineSettingPreviousVersion.tsx","webpack:///./src/main/js/apps/settings/styles.css?cb9e","webpack:///./src/main/js/apps/settings/styles.css","webpack:///./src/main/js/apps/settings/store/actions.ts","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmBindingDefinitionBox.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmBindingDefinitionFormModalRenderer.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmBindingDefinitionForm.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/CreationTooltip.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmTabRenderer.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmTab.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmBindingDefinitionFormField.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AzureForm.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AzureTab.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/BitbucketForm.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/BitbucketTabRenderer.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/BitbucketTab.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/DeleteModal.tsx","webpack:///./src/main/js/apps/settings/components/DefinitionActions.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForBoolean.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForJSON.tsx","webpack:///./src/main/js/apps/settings/components/inputs/SimpleInput.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForNumber.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForPassword.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForSingleSelectList.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForString.tsx","webpack:///./src/main/js/apps/settings/components/inputs/InputForText.tsx","webpack:///./src/main/js/apps/settings/components/inputs/PrimitiveInput.tsx","webpack:///./src/main/js/apps/settings/components/inputs/MultiValueInput.tsx","webpack:///./src/main/js/apps/settings/components/inputs/PropertySetInput.tsx","webpack:///./src/main/js/apps/settings/components/inputs/Input.tsx","webpack:///./src/main/js/apps/settings/components/Definition.tsx","webpack:///./src/main/js/apps/settings/components/DefinitionsList.tsx","webpack:///./src/main/js/apps/settings/components/EmailForm.tsx","webpack:///./src/main/js/apps/settings/components/SubCategoryDefinitionsList.tsx","webpack:///./src/main/js/apps/settings/components/CategoryDefinitionsList.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/GithubForm.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/GithubTab.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/GitlabForm.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/GitlabTab.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmIntegrationRenderer.tsx","webpack:///./src/main/js/apps/settings/components/almIntegration/utils.ts","webpack:///./src/main/js/apps/settings/components/almIntegration/AlmIntegration.tsx","webpack:///./src/main/js/apps/settings/components/AnalysisScope.tsx","webpack:///./src/main/js/apps/settings/components/CategoryOverrides.ts","webpack:///./src/main/js/apps/settings/components/Languages.tsx","webpack:///./src/main/js/apps/settings/components/NewCodePeriod.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecorationBinding/AlmSpecificForm.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecorationBinding/PRDecorationBindingRenderer.tsx","webpack:///./src/main/js/apps/settings/components/pullRequestDecorationBinding/PRDecorationBinding.tsx","webpack:///./src/main/js/apps/settings/components/AdditionalCategories.tsx","webpack:///./src/main/js/apps/settings/components/AllCategoriesList.tsx","webpack:///./src/main/js/apps/settings/components/PageHeader.tsx","webpack:///./src/main/js/apps/settings/components/AppContainer.tsx","webpack:///./src/main/js/app/components/embed-docs-modal/Suggestions.tsx","webpack:///./src/main/js/helpers/sanitize.ts","webpack:///./src/main/js/components/common/ScreenPositionHelper.tsx","webpack:///./src/main/js/api/settings.ts","webpack:///./src/main/js/api/alm-settings.ts","webpack:///./src/main/js/apps/settings/components/AdditionalCategoryKeys.ts"],"names":["getNewCodePeriod","data","catch","setNewCodePeriod","resetNewCodePeriod","listBranchesNewCodePeriod","validateDays","days","parsed","parseInt","length","isNaN","String","getSettingValue","analysis","referenceBranch","validateSetting","state","currentSetting","currentSettingValue","overrideGeneralSetting","selected","isChanged","undefined","isValid","BaselineSettingDays","props","className","disabled","onChangeDays","onSelect","onClick","title","error","id","isInvalid","label","required","onChange","e","currentTarget","type","value","BaselineSettingPreviousVersion","isDefault","api","content","__esModule","default","module","i","options","exported","locals","exports","___CSS_LOADER_API_IMPORT___","push","handleError","key","dispatch","response","then","message","Promise","reject","DEFAULT_STATUS","alertSuccess","failureMessage","Validating","STATUS_ICON","Failure","Success","AlmBindingDefinitionBox","alm","branchesEnabled","definition","multipleDefinitions","status","prDecoFeatureTitle","GitLab","prDecoFeatureDescription","onEdit","onDelete","url","Warning","overlay","defaultMessage","values","link","href","developer","sourceEdition","community","rel","target","getPRDecorationFeatureStatus","includes","getImportFeatureStatus","Alert","variant","onCheck","AlmBindingDefinitionFormModalRenderer","action","children","help","isSecondInstance","header","contentLabel","onRequestClose","onCancel","shouldCloseOnOverlayClick","size","onSubmit","event","preventDefault","canSubmit","handleCancel","setState","formData","bindingDefinition","touched","handleDelete","handleEdit","handleFieldChange","fieldId","handleFormSubmit","optionalFields","Object","some","v","componentDidUpdate","prevProps","this","render","Boolean","onFieldChange","withAppState","edition","preventCreation","enterprise","mouseLeaveDelay","AlmTabRenderer","definitions","definitionStatus","editedDefinition","form","loadingAlmDefinitions","loadingProjectCount","multipleAlmEnabled","loading","onCreate","map","def","BitbucketCloud","mounted","submitting","success","handleCreate","defaultBinding","definitionKey","find","d","handleSubmit","config","originalKey","call","updateConfiguration","newKey","createConfiguration","onUpdateDefinitions","componentDidMount","componentWillUnmount","AlmBindingDefinitionFormField","autoFocus","isTextArea","maxLength","optional","overwriteOnly","propKey","showField","setShowField","htmlFor","placement","rows","name","AzureForm","personalAccessToken","AzureTab","Azure","childProps","to","BitbucketForm","isCreating","onSelectVariant","BitbucketServer","example","workspace","clientId","clientSecret","BitbucketTabRenderer","DEFAULT_SERVER_BINDING","DEFAULT_CLOUD_BINDING","handleSelectVariant","DeleteModal","projectCount","confirmButtonText","confirmData","isDestructive","onClose","onConfirm","showProjectCountWarning","reseting","handleClose","handleReset","onReset","renderModal","setting","changedValue","hasValueChanged","hasValueToResetTo","hasBeenChangedToEmptyValue","showReset","style","lineHeight","hasError","onSave","InputForBoolean","displayedValue","formatError","handleInputChange","format","JSON","stringify","parse","handleKeyDown","keyCode","onKeyDown","InputForNumber","changing","handleChangeClick","componentWillReceiveProps","nextProps","renderInput","autoComplete","fill","gray60","option","clearable","InputForString","typeMapping","STRING","TEXT","PASSWORD","BOOLEAN","INTEGER","LONG","FLOAT","other","InputComponent","ensureValue","handleSingleInputChange","index","newValue","splice","handleDeleteValue","isLast","multiValues","fieldKey","emptyValue","newFields","renderFields","fieldValues","fields","field","width","minWidth","marginTop","description","Input","handleChange","clearTimeout","timeout","changeValue","handleCheck","component","componentKey","resetValue","cancelChange","safeSetState","window","setTimeout","passValidation","checkValue","handleSave","saveValue","changes","validationMessage","propertyName","effectiveValue","dangerouslySetInnerHTML","__html","sanitize","mapDispatchToProps","getState","defaultValue","keys","ownProps","DefinitionsList","settings","recipient","subject","onRecipientChange","onSubjectChange","onMessageChange","currentUser","email","withCurrentUser","renderEmailForm","subCategoryKey","category","fetchValues","prevKeys","join","bySubCategory","subCategories","sortedSubCategories","subCategory","toLowerCase","filteredSubCategories","filter","c","GithubForm","appId","privateKey","GithubTab","GitHub","CategoryDefinitionsList","GitlabForm","GitlabTab","tabs","alt","height","src","requiresBranchesEnabled","AlmIntegrationRenderer","definitionKeyForDeletion","currentAlm","onSelectAlm","tab","azure","bitbucket","bitbucketcloud","github","gitlab","onConfirmDelete","ALM_KEY_LIST","deleteConfiguration","fetchPullRequestDecorationSetting","handleSelectAlm","location","query","forEach","appState","withRouter","AnalysisScope","selectedCategory","abap","apex","cobol","css","flex","go","html","java","javascript","kotlin","php","python","rpg","ruby","scala","swift","typescript","xml","categories","router","lowerCasedLanguagesCategory","lowerCasedSelectedCategory","availableLanguages","originalValue","selectedLanguage","getLanguages","newOption","placeholder","saving","onSelectDays","onSelectSetting","fetchNewCodePeriodSetting","renderLabel","helpParams","renderBooleanField","inputExtra","renderField","AlmSpecificForm","formFields","repository","slug","summaryCommentEnabled","monorepo","monorepoEnabled","doc_link","display","optionRenderer","instance","PRDecorationBindingRenderer","instances","isConfigured","autosize","menuContainerStyle","maxWidth","searchable","valueKey","valueRenderer","REQUIRED_FIELDS_BY_ALM","fetchDefinitions","project","all","getProjectBinding","originalData","newFormData","validateForm","orignalData","catchError","additionalFields","submitProjectAlmBinding","isDataSame","reduce","result","NotFound","throwGlobalError","almSpecificFields","almSetting","projectName","repositoryName","oKey","oRepository","oSlug","osummaryCommentEnabled","datacenter","ADDITIONAL_CATEGORIES","renderComponent","availableGlobally","availableForProject","displayTab","defaultCategory","pathname","categoriesWithName","concat","sortedCategories","active","PageHeader","InstanceMessage","fetchSettings","stopLoading","originalCategory","foundAdditionalCategory","isProjectSettings","shouldRenderAdditionalCategory","Suggestions","suggestions","defer","ScreenPositionHelper","top","AllCategoriesList","filtered","Consumer","addSuggestions","removeSuggestions","SuggestionsInner","sanitizeStringRestricted","ALLOWED_TAGS","ALLOWED_ATTR","sanitizeString","USE_PROFILES","getPosition","containerPos","container","getBoundingClientRect","pageYOffset","left","pageXOffset","debouncedOnResize","forceUpdate","addEventListener","removeEventListener","ref","getDefinitions","r","getValues","setSettingValue","setSimpleSettingValue","resetSettingValue","sendTestEmail","checkSecretKey","generateSecretKey","encryptValue","getAlmDefinitions","getAlmSettings","getAlmSettingsNoCatch","validateAlmSettings","BadRequest","createGithubConfiguration","updateGithubConfiguration","createAzureConfiguration","updateAzureConfiguration","createBitbucketConfiguration","updateBitbucketConfiguration","createBitbucketCloudConfiguration","updateBitbucketCloudConfiguration","createGitlabConfiguration","updateGitlabConfiguration","countBindedProjects","getProjectAlmBinding","deleteProjectAlmBinding","setProjectAzureBinding","setProjectBitbucketBinding","setProjectBitbucketCloudBinding","setProjectGithubBinding","setProjectGitlabBinding","ALM_INTEGRATION","ANALYSIS_SCOPE_CATEGORY","LANGUAGES_CATEGORY","NEW_CODE_PERIOD_CATEGORY","PULL_REQUEST_DECORATION_BINDING_CATEGORY"],"mappings":"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","file":"js/308.1655372229846.chunk.js","sourcesContent":["/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { getJSON, post } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\n\nexport function getNewCodePeriod(data?: {\n  project?: string;\n  branch?: string;\n}): Promise<T.Omit<T.NewCodePeriod, 'effectiveValue'>> {\n  return getJSON('/api/new_code_periods/show', data).catch(throwGlobalError);\n}\n\nexport function setNewCodePeriod(data: {\n  project?: string;\n  branch?: string;\n  type: T.NewCodePeriodSettingType;\n  value?: string;\n}): Promise<void> {\n  return post('/api/new_code_periods/set', data).catch(throwGlobalError);\n}\n\nexport function resetNewCodePeriod(data: { project?: string; branch?: string }): Promise<void> {\n  return post('/api/new_code_periods/unset', data).catch(throwGlobalError);\n}\n\nexport function listBranchesNewCodePeriod(data: {\n  project: string;\n}): Promise<{ newCodePeriods: T.NewCodePeriodBranch[] }> {\n  return getJSON('/api/new_code_periods/list', data).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport function validateDays(days: string) {\n  const parsed = parseInt(days, 10);\n\n  return !(days.length < 1 || isNaN(parsed) || parsed < 1 || String(parsed) !== days);\n}\n\nexport function getSettingValue({\n  analysis,\n  days,\n  referenceBranch,\n  type\n}: {\n  analysis?: string;\n  days?: string;\n  referenceBranch?: string;\n  type?: T.NewCodePeriodSettingType;\n}) {\n  switch (type) {\n    case 'NUMBER_OF_DAYS':\n      return days;\n    case 'REFERENCE_BRANCH':\n      return referenceBranch;\n    case 'SPECIFIC_ANALYSIS':\n      return analysis;\n    default:\n      return undefined;\n  }\n}\n\nexport function validateSetting(state: {\n  analysis?: string;\n  currentSetting?: T.NewCodePeriodSettingType;\n  currentSettingValue?: string;\n  days: string;\n  overrideGeneralSetting?: boolean;\n  referenceBranch?: string;\n  selected?: T.NewCodePeriodSettingType;\n}) {\n  const {\n    analysis = '',\n    currentSetting,\n    currentSettingValue,\n    days,\n    overrideGeneralSetting,\n    referenceBranch = '',\n    selected\n  } = state;\n\n  let isChanged;\n  if (!currentSetting && overrideGeneralSetting !== undefined) {\n    isChanged = overrideGeneralSetting;\n  } else {\n    isChanged =\n      overrideGeneralSetting === false ||\n      selected !== currentSetting ||\n      (selected === 'NUMBER_OF_DAYS' && days !== currentSettingValue) ||\n      (selected === 'SPECIFIC_ANALYSIS' && analysis !== currentSettingValue) ||\n      (selected === 'REFERENCE_BRANCH' && referenceBranch !== currentSettingValue);\n  }\n\n  const isValid =\n    overrideGeneralSetting === false ||\n    selected === 'PREVIOUS_VERSION' ||\n    (selected === 'SPECIFIC_ANALYSIS' && analysis.length > 0) ||\n    (selected === 'NUMBER_OF_DAYS' && validateDays(days)) ||\n    (selected === 'REFERENCE_BRANCH' && referenceBranch.length > 0);\n\n  return { isChanged, isValid };\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport RadioCard from 'sonar-ui-common/components/controls/RadioCard';\nimport ValidationInput from 'sonar-ui-common/components/controls/ValidationInput';\nimport MandatoryFieldsExplanation from 'sonar-ui-common/components/ui/MandatoryFieldsExplanation';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface Props {\n  className?: string;\n  days: string;\n  disabled?: boolean;\n  isChanged: boolean;\n  isValid: boolean;\n  onChangeDays: (value: string) => void;\n  onSelect: (selection: T.NewCodePeriodSettingType) => void;\n  selected: boolean;\n}\n\nexport default function BaselineSettingDays(props: Props) {\n  const { className, days, disabled, isChanged, isValid, onChangeDays, onSelect, selected } = props;\n  return (\n    <RadioCard\n      className={className}\n      disabled={disabled}\n      onClick={() => onSelect('NUMBER_OF_DAYS')}\n      selected={selected}\n      title={translate('baseline.number_days')}>\n      <>\n        <p className=\"big-spacer-bottom\">{translate('baseline.number_days.description')}</p>\n        {selected && (\n          <>\n            <MandatoryFieldsExplanation />\n\n            <ValidationInput\n              error={undefined}\n              id=\"baseline_number_of_days\"\n              isInvalid={isChanged && !isValid}\n              isValid={isChanged && isValid}\n              label={translate('baseline.specify_days')}\n              required={true}>\n              <input onChange={e => onChangeDays(e.currentTarget.value)} type=\"text\" value={days} />\n            </ValidationInput>\n          </>\n        )}\n      </>\n    </RadioCard>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport RadioCard from 'sonar-ui-common/components/controls/RadioCard';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface Props {\n  disabled?: boolean;\n  isDefault?: boolean;\n  onSelect: (selection: T.NewCodePeriodSettingType) => void;\n  selected: boolean;\n}\n\nexport default function BaselineSettingPreviousVersion(props: Props) {\n  const { disabled, isDefault, onSelect, selected } = props;\n  return (\n    <RadioCard\n      disabled={disabled}\n      onClick={() => onSelect('PREVIOUS_VERSION')}\n      selected={selected}\n      title={\n        translate('baseline.previous_version') + (isDefault ? ` (${translate('default')})` : '')\n      }>\n      <p>{translate('baseline.previous_version.description')}</p>\n    </RadioCard>\n  );\n}\n","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ref--6-1!../../../../../node_modules/postcss-loader/src/index.js??postcss!./styles.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\nvar exported = content.locals ? content.locals : {};\n\n\n\nmodule.exports = exported;","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"#settings-page .layout-page-side,#settings-page .layout-page-side-outer{width:calc(50vw - 480px);border-right:none}#settings-page .layout-page-side-inner{width:160px;margin-left:calc(50vw - 639px)}#settings-page .layout-page-main{padding:0}#settings-page .layout-page-main-inner{max-width:1110px}#settings-page .top-bar-outer{height:80px}#settings-page .top-bar{background-color:#f3f3f3;position:fixed;z-index:55;left:0;right:0}#settings-page .top-bar-inner{max-width:1280px;margin:0 auto;height:80px;box-sizing:border-box}#settings-page .page-description,#settings-page .page-title{float:none}.settings-definitions-list>li+li{margin-top:30px}.settings-definition{margin:0 -20px;padding:10px 20px;border-top:1px solid transparent;border-bottom:1px solid transparent;display:flex;align-items:stretch}.settings-definition-changed{border-top:1px solid #faebcc;border-bottom:1px solid #faebcc;background-color:#fcf8e3}.settings-definition-left{width:330px;padding-right:30px;box-sizing:border-box}.settings-definition-right{position:relative;width:calc(100% - 330px);box-sizing:border-box}.settings-definition-name{text-overflow:ellipsis}.settings-definition-key{line-height:1.5;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.settings-definition-key:hover{overflow:visible}.settings-definition-state{min-height:32px;padding-bottom:4px}.settings-definition-state>span{display:flex}.settings-definition-changes{margin-top:20px;padding-top:20px;border-top:1px dotted #e6e6e6}.settings-sub-categories-list>li+li,.settings-sub-category{margin:30px -20px 0;padding:30px 20px;border-top:1px solid #e6e6e6}.settings-sub-category-name{margin-bottom:20px;font-size:16px}.settings-sub-category-description{margin-top:-15px;margin-bottom:20px;color:#666}.settings-large-input{width:100%!important;max-width:400px;min-width:200px}.side-tabs-menu{margin-top:16px}.side-tabs-menu>li{margin-bottom:4px}.side-tabs-menu>li>a{display:block;padding:10px;line-height:1.5;border-top-left-radius:3px;border-bottom-left-radius:3px;border:1px solid #e6e6e6;border-right:none;overflow:hidden;text-overflow:ellipsis;transition:color .3s ease,background-color .3s ease}.side-tabs-menu>li>a.active,.side-tabs-menu>li>a:focus,.side-tabs-menu>li>a:hover{background-color:#fff}.side-tabs-menu>li>a.active{color:#333;cursor:default}@media (max-width:1320px){#settings-page .layout-page-side,#settings-page .layout-page-side-outer{width:180px}#settings-page .layout-page-side-inner{margin-left:20px}#settings-page .top-bar-inner{margin:0 20px}}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { Dispatch } from 'redux';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { parseError } from 'sonar-ui-common/helpers/request';\nimport {\n  getDefinitions,\n  getValues,\n  resetSettingValue,\n  setSettingValue\n} from '../../../api/settings';\nimport { closeAllGlobalMessages } from '../../../store/globalMessages';\nimport {\n  getSettingsAppChangedValue,\n  getSettingsAppDefinition,\n  Store\n} from '../../../store/rootReducer';\nimport { isEmptyValue } from '../utils';\nimport { receiveDefinitions } from './definitions';\nimport {\n  cancelChange,\n  failValidation,\n  passValidation,\n  startLoading,\n  stopLoading\n} from './settingsPage';\nimport { receiveValues } from './values';\n\nexport function fetchSettings(component?: string) {\n  return (dispatch: Dispatch) => {\n    return getDefinitions(component).then(definitions => {\n      const filtered = definitions.filter(definition => definition.type !== 'LICENSE');\n      dispatch(receiveDefinitions(filtered));\n    });\n  };\n}\n\nexport function fetchValues(keys: string, component?: string) {\n  return (dispatch: Dispatch) =>\n    getValues({ keys, component }).then(settings => {\n      dispatch(receiveValues(settings, component));\n      dispatch(closeAllGlobalMessages());\n    });\n}\n\nexport function checkValue(key: string) {\n  return (dispatch: Dispatch, getState: () => Store) => {\n    const state = getState();\n    const definition = getSettingsAppDefinition(state, key);\n    const value = getSettingsAppChangedValue(state, key);\n\n    if (isEmptyValue(definition, value)) {\n      if (definition.defaultValue === undefined) {\n        dispatch(failValidation(key, translate('settings.state.value_cant_be_empty_no_default')));\n      } else {\n        dispatch(failValidation(key, translate('settings.state.value_cant_be_empty')));\n      }\n      return false;\n    }\n\n    if (definition.type === 'JSON') {\n      try {\n        JSON.parse(value);\n      } catch (e) {\n        dispatch(failValidation(key, e.message));\n        return false;\n      }\n    }\n\n    dispatch(passValidation(key));\n    return true;\n  };\n}\n\nexport function saveValue(key: string, component?: string) {\n  return (dispatch: Dispatch, getState: () => Store) => {\n    dispatch(startLoading(key));\n    const state = getState();\n    const definition = getSettingsAppDefinition(state, key);\n    const value = getSettingsAppChangedValue(state, key);\n\n    if (isEmptyValue(definition, value)) {\n      dispatch(failValidation(key, translate('settings.state.value_cant_be_empty')));\n      dispatch(stopLoading(key));\n      return Promise.reject();\n    }\n\n    return setSettingValue(definition, value, component)\n      .then(() => getValues({ keys: key, component }))\n      .then(values => {\n        dispatch(receiveValues(values, component));\n        dispatch(cancelChange(key));\n        dispatch(passValidation(key));\n        dispatch(stopLoading(key));\n      })\n      .catch(handleError(key, dispatch));\n  };\n}\n\nexport function resetValue(key: string, component?: string) {\n  return (dispatch: Dispatch) => {\n    dispatch(startLoading(key));\n\n    return resetSettingValue({ keys: key, component })\n      .then(() => getValues({ keys: key, component }))\n      .then(values => {\n        if (values.length > 0) {\n          dispatch(receiveValues(values, component));\n        } else {\n          dispatch(receiveValues([{ key }], component));\n        }\n        dispatch(passValidation(key));\n        dispatch(stopLoading(key));\n      })\n      .catch(handleError(key, dispatch));\n  };\n}\n\nfunction handleError(key: string, dispatch: Dispatch) {\n  return (response: Response) => {\n    dispatch(stopLoading(key));\n    return parseError(response).then(message => {\n      dispatch(failValidation(key, message));\n      return Promise.reject();\n    });\n  };\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport AlertErrorIcon from 'sonar-ui-common/components/icons/AlertErrorIcon';\nimport AlertSuccessIcon from 'sonar-ui-common/components/icons/AlertSuccessIcon';\nimport DeleteIcon from 'sonar-ui-common/components/icons/DeleteIcon';\nimport EditIcon from 'sonar-ui-common/components/icons/EditIcon';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getEdition, getEditionUrl } from '../../../../helpers/editions';\nimport { IMPORT_COMPATIBLE_ALMS } from '../../../../helpers/constants';\nimport {\n  AlmBindingDefinition,\n  AlmKeys,\n  AlmSettingsBindingStatus,\n  AlmSettingsBindingStatusType\n} from '../../../../types/alm-settings';\nimport { EditionKey } from '../../../../types/editions';\n\nexport interface AlmBindingDefinitionBoxProps {\n  alm: AlmKeys;\n  branchesEnabled: boolean;\n  definition: AlmBindingDefinition;\n  multipleDefinitions: boolean;\n  onCheck: (definitionKey: string) => void;\n  onDelete: (definitionKey: string) => void;\n  onEdit: (definitionKey: string) => void;\n  status?: AlmSettingsBindingStatus;\n}\n\nconst DEFAULT_STATUS: AlmSettingsBindingStatus = {\n  alertSuccess: false,\n  failureMessage: '',\n  type: AlmSettingsBindingStatusType.Validating\n};\n\nconst STATUS_ICON = {\n  [AlmSettingsBindingStatusType.Failure]: <AlertErrorIcon className=\"spacer-left\" />,\n  [AlmSettingsBindingStatusType.Success]: <AlertSuccessIcon className=\"spacer-left\" />\n};\n\nfunction getPRDecorationFeatureStatus(\n  branchesEnabled: boolean,\n  type: AlmSettingsBindingStatusType.Success | AlmSettingsBindingStatusType.Failure\n) {\n  if (branchesEnabled) {\n    return STATUS_ICON[type];\n  }\n\n  return (\n    <div className=\"display-inline-flex-center\">\n      <strong className=\"spacer-left\">\n        {translate('settings.almintegration.feature.pr_decoration.disabled')}\n      </strong>\n      <HelpTooltip\n        className=\"little-spacer-left\"\n        overlay={\n          <FormattedMessage\n            id=\"settings.almintegration.feature.pr_decoration.disabled.no_branches\"\n            defaultMessage={translate(\n              'settings.almintegration.feature.pr_decoration.disabled.no_branches'\n            )}\n            values={{\n              link: (\n                <a\n                  href={getEditionUrl(getEdition(EditionKey.developer), {\n                    sourceEdition: EditionKey.community\n                  })}\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\">\n                  {translate(\n                    'settings.almintegration.feature.pr_decoration.disabled.no_branches.link'\n                  )}\n                </a>\n              )\n            }}\n          />\n        }\n      />\n    </div>\n  );\n}\n\nfunction getImportFeatureStatus(\n  definition: AlmBindingDefinition,\n  multipleDefinitions: boolean,\n  type: AlmSettingsBindingStatusType.Success | AlmSettingsBindingStatusType.Failure\n) {\n  if (multipleDefinitions) {\n    return (\n      <div className=\"display-inline-flex-center\">\n        <strong className=\"spacer-left\">\n          {translate('settings.almintegration.feature.alm_repo_import.disabled')}\n        </strong>\n        <HelpTooltip\n          className=\"little-spacer-left\"\n          overlay={translate('settings.almintegration.feature.alm_repo_import.disabled.multiple')}\n        />\n      </div>\n    );\n  }\n\n  if (!definition.url) {\n    return (\n      <div className=\"display-inline-flex-center\">\n        <strong className=\"spacer-left\">\n          {translate('settings.almintegration.feature.alm_repo_import.disabled')}\n        </strong>\n        <HelpTooltip\n          className=\"little-spacer-left\"\n          overlay={translate('settings.almintegration.feature.alm_repo_import.disabled.no_url')}\n        />\n      </div>\n    );\n  }\n\n  return STATUS_ICON[type];\n}\n\nexport default function AlmBindingDefinitionBox(props: AlmBindingDefinitionBoxProps) {\n  const { alm, branchesEnabled, definition, multipleDefinitions, status = DEFAULT_STATUS } = props;\n\n  const prDecoFeatureTitle =\n    alm === AlmKeys.GitLab\n      ? translate('settings.almintegration.feature.mr_decoration.title')\n      : translate('settings.almintegration.feature.pr_decoration.title');\n\n  const prDecoFeatureDescription =\n    alm === AlmKeys.GitLab\n      ? translate('settings.almintegration.feature.mr_decoration.description')\n      : translate('settings.almintegration.feature.pr_decoration.description');\n\n  return (\n    <div className=\"boxed-group-inner bordered spacer-top spacer-bottom it__alm-binding-definition\">\n      <div className=\"actions pull-right\">\n        <Button onClick={() => props.onEdit(definition.key)}>\n          <EditIcon className=\"spacer-right\" />\n          {translate('edit')}\n        </Button>\n        <Button className=\"button-red spacer-left\" onClick={() => props.onDelete(definition.key)}>\n          <DeleteIcon className=\"spacer-right\" />\n          {translate('delete')}\n        </Button>\n      </div>\n\n      <div className=\"big-spacer-bottom\">\n        <h3>{definition.key}</h3>\n        {definition.url && <span>{definition.url}</span>}\n      </div>\n\n      {status.type === AlmSettingsBindingStatusType.Validating ? (\n        <>\n          <i className=\"spinner spacer-right\" />\n          {translate('settings.almintegration.checking_configuration')}\n        </>\n      ) : (\n        <>\n          {status.type !== AlmSettingsBindingStatusType.Warning && (\n            <div className=\"display-flex-row spacer-bottom\">\n              <div className=\"huge-spacer-right\">\n                <Tooltip overlay={prDecoFeatureDescription}>\n                  <span>{prDecoFeatureTitle}</span>\n                </Tooltip>\n                {getPRDecorationFeatureStatus(branchesEnabled, status.type)}\n              </div>\n              {IMPORT_COMPATIBLE_ALMS.includes(alm) && (\n                <div>\n                  <Tooltip\n                    overlay={translate(\n                      'settings.almintegration.feature.alm_repo_import.description'\n                    )}>\n                    <span>\n                      {translate('settings.almintegration.feature.alm_repo_import.title')}\n                    </span>\n                  </Tooltip>\n                  {getImportFeatureStatus(definition, multipleDefinitions, status.type)}\n                </div>\n              )}\n            </div>\n          )}\n\n          <div className=\"width-50\">\n            {status.type === AlmSettingsBindingStatusType.Warning && (\n              <Alert variant=\"warning\">\n                {translate('settings.almintegration.could_not_validate')}\n              </Alert>\n            )}\n\n            {status.type === AlmSettingsBindingStatusType.Failure && (\n              <Alert variant=\"error\">{status.failureMessage}</Alert>\n            )}\n\n            {status.type === AlmSettingsBindingStatusType.Success && status.alertSuccess && (\n              <Alert variant=\"success\">\n                {translate('settings.almintegration.configuration_valid')}\n              </Alert>\n            )}\n          </div>\n\n          <Button className=\"big-spacer-top\" onClick={() => props.onCheck(definition.key)}>\n            {translate('settings.almintegration.check_configuration')}\n          </Button>\n        </>\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\n\nexport interface AlmBindingDefinitionFormModalProps {\n  action: 'edit' | 'create';\n  canSubmit: () => boolean;\n  children: React.ReactNode;\n  help?: React.ReactNode;\n  isSecondInstance: boolean;\n  onCancel: () => void;\n  onSubmit: () => void | Promise<void | Response>;\n}\n\nexport default function AlmBindingDefinitionFormModalRenderer(\n  props: AlmBindingDefinitionFormModalProps\n) {\n  const { action, children, help, isSecondInstance } = props;\n  const header = translate('settings.almintegration.form.header', action);\n\n  const handleSubmit = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    props.onSubmit();\n  };\n\n  return (\n    <Modal\n      contentLabel={header}\n      onRequestClose={props.onCancel}\n      shouldCloseOnOverlayClick={false}\n      size=\"medium\">\n      <form className=\"views-form\" onSubmit={handleSubmit}>\n        <div className=\"modal-head\">\n          <h2>{header}</h2>\n        </div>\n\n        <div className=\"modal-body modal-container\">\n          {isSecondInstance && action === 'create' && (\n            <Alert className=\"big-spacer-bottom\" variant=\"warning\">\n              {translate('settings.almintegration.form.second_instance_warning')}\n            </Alert>\n          )}\n\n          <div className=\"display-flex-start\">\n            <div className=\"flex-1\">{children}</div>\n\n            {help ? (\n              <Alert className=\"huge-spacer-left flex-1\" variant=\"info\">\n                {help}\n              </Alert>\n            ) : (\n              <div className=\"flex-1\" />\n            )}\n          </div>\n        </div>\n\n        <div className=\"modal-foot\">\n          <SubmitButton disabled={!props.canSubmit()}>\n            {translate('settings.almintegration.form.save')}\n          </SubmitButton>\n          <ResetButtonLink onClick={props.onCancel}>{translate('cancel')}</ResetButtonLink>\n        </div>\n      </form>\n    </Modal>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { isEqual, omit } from 'lodash';\nimport * as React from 'react';\nimport { AlmBindingDefinition } from '../../../../types/alm-settings';\nimport AlmBindingDefinitionFormModalRenderer from './AlmBindingDefinitionFormModalRenderer';\n\nexport interface AlmBindingDefinitionFormChildrenProps<B> {\n  formData: B;\n  onFieldChange: (fieldId: keyof B, value: string) => void;\n}\n\ninterface Props<B> {\n  bindingDefinition: B;\n  children: (props: AlmBindingDefinitionFormChildrenProps<B>) => React.ReactNode;\n  help?: React.ReactNode;\n  isSecondInstance?: boolean;\n  onCancel?: () => void;\n  onDelete?: (definitionKey: string) => void;\n  onEdit?: (definitionKey: string) => void;\n  onSubmit: (data: B, originalKey: string) => void;\n  optionalFields?: Array<keyof B>;\n}\n\ninterface State<B> {\n  formData: B;\n  touched: boolean;\n}\n\nexport default class AlmBindingDefinitionForm<\n  B extends AlmBindingDefinition\n> extends React.PureComponent<Props<B>, State<B>> {\n  constructor(props: Props<B>) {\n    super(props);\n    this.state = { formData: props.bindingDefinition, touched: false };\n  }\n\n  componentDidUpdate(prevProps: Props<B>) {\n    if (!isEqual(prevProps.bindingDefinition, this.props.bindingDefinition)) {\n      this.setState({ formData: this.props.bindingDefinition, touched: false });\n    }\n  }\n\n  handleCancel = () => {\n    this.setState({ formData: this.props.bindingDefinition, touched: false });\n    if (this.props.onCancel) {\n      this.props.onCancel();\n    }\n  };\n\n  handleDelete = () => {\n    if (this.props.onDelete) {\n      this.props.onDelete(this.props.bindingDefinition.key);\n    }\n  };\n\n  handleEdit = () => {\n    if (this.props.onEdit) {\n      this.props.onEdit(this.props.bindingDefinition.key);\n    }\n  };\n\n  handleFieldChange = (fieldId: keyof B, value: string) => {\n    this.setState(({ formData }) => ({\n      formData: {\n        ...formData,\n        [fieldId]: value\n      },\n      touched: true\n    }));\n  };\n\n  handleFormSubmit = () => {\n    this.props.onSubmit(this.state.formData, this.props.bindingDefinition.key);\n  };\n\n  canSubmit = () => {\n    const { optionalFields } = this.props;\n    const { formData, touched } = this.state;\n\n    let values = { ...formData };\n\n    if (optionalFields && optionalFields.length > 0) {\n      values = omit(values, optionalFields) as B;\n    }\n\n    return touched && !Object.values(values).some(v => !v);\n  };\n\n  render() {\n    const { bindingDefinition, children, help, isSecondInstance } = this.props;\n    const { formData } = this.state;\n\n    const action = bindingDefinition.key ? 'edit' : 'create';\n\n    return (\n      <AlmBindingDefinitionFormModalRenderer\n        action={action}\n        canSubmit={this.canSubmit}\n        help={help}\n        isSecondInstance={Boolean(isSecondInstance)}\n        onCancel={this.handleCancel}\n        onSubmit={this.handleFormSubmit}>\n        {children({\n          formData,\n          onFieldChange: this.handleFieldChange\n        })}\n      </AlmBindingDefinitionFormModalRenderer>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport Tooltip from 'sonar-ui-common/components/controls/Tooltip';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { withAppState } from '../../../../components/hoc/withAppState';\nimport { getEdition, getEditionUrl } from '../../../../helpers/editions';\nimport { AlmKeys } from '../../../../types/alm-settings';\nimport { EditionKey } from '../../../../types/editions';\n\nexport interface CreationTooltipProps {\n  alm: AlmKeys;\n  appState: T.AppState;\n  children: React.ReactElement<{}>;\n  preventCreation: boolean;\n}\n\nexport function CreationTooltip(props: CreationTooltipProps) {\n  const {\n    alm,\n    appState: { edition },\n    children,\n    preventCreation\n  } = props;\n\n  const sourceEdition = edition ? EditionKey[edition] : undefined;\n\n  return (\n    <Tooltip\n      overlay={\n        preventCreation ? (\n          <FormattedMessage\n            id=\"settings.almintegration.create.tooltip\"\n            defaultMessage={translate('settings.almintegration.create.tooltip')}\n            values={{\n              link: (\n                <a\n                  href={getEditionUrl(getEdition(EditionKey.enterprise), {\n                    sourceEdition\n                  })}\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\">\n                  {translate('settings.almintegration.create.tooltip.link')}\n                </a>\n              ),\n              alm: translate('alm', alm)\n            }}\n          />\n        ) : null\n      }\n      mouseLeaveDelay={0.25}>\n      {children}\n    </Tooltip>\n  );\n}\n\nexport default withAppState(CreationTooltip);\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  AlmBindingDefinition,\n  AlmKeys,\n  AlmSettingsBindingStatus,\n  isBitbucketCloudBindingDefinition\n} from '../../../../types/alm-settings';\nimport AlmBindingDefinitionBox from './AlmBindingDefinitionBox';\nimport AlmBindingDefinitionForm, {\n  AlmBindingDefinitionFormChildrenProps\n} from './AlmBindingDefinitionForm';\nimport CreationTooltip from './CreationTooltip';\n\nexport interface AlmTabRendererProps<B> {\n  alm: AlmKeys;\n  branchesEnabled: boolean;\n  definitionStatus: T.Dict<AlmSettingsBindingStatus>;\n  editedDefinition?: B;\n  definitions: B[];\n  form: (props: AlmBindingDefinitionFormChildrenProps<B>) => React.ReactNode;\n  help: React.ReactNode;\n  loadingAlmDefinitions: boolean;\n  loadingProjectCount: boolean;\n  multipleAlmEnabled: boolean;\n  onCancel: () => void;\n  onCheck: (definitionKey: string) => void;\n  onCreate: () => void;\n  onDelete: (definitionKey: string) => void;\n  onEdit: (definitionKey: string) => void;\n  onSubmit: (config: B, originalKey: string) => void;\n  optionalFields?: Array<keyof B>;\n  submitting: boolean;\n  success: boolean;\n}\n\nexport default function AlmTabRenderer<B extends AlmBindingDefinition>(\n  props: AlmTabRendererProps<B>\n) {\n  const {\n    alm,\n    branchesEnabled,\n    definitions,\n    definitionStatus,\n    editedDefinition,\n    form,\n    loadingAlmDefinitions,\n    loadingProjectCount,\n    multipleAlmEnabled,\n    optionalFields,\n    help\n  } = props;\n\n  const preventCreation = loadingProjectCount || (!multipleAlmEnabled && definitions.length > 0);\n\n  return (\n    <div className=\"big-padded\">\n      <DeferredSpinner loading={loadingAlmDefinitions}>\n        {definitions.length === 0 && (\n          <p className=\"spacer-top\">{translate('settings.almintegration.empty', alm)}</p>\n        )}\n\n        <div className={definitions.length > 0 ? 'spacer-bottom text-right' : 'big-spacer-top'}>\n          <CreationTooltip alm={alm} preventCreation={preventCreation}>\n            <Button\n              data-test=\"settings__alm-create\"\n              disabled={preventCreation}\n              onClick={props.onCreate}>\n              {translate('settings.almintegration.create')}\n            </Button>\n          </CreationTooltip>\n        </div>\n        {definitions.map(def => (\n          <AlmBindingDefinitionBox\n            alm={isBitbucketCloudBindingDefinition(def) ? AlmKeys.BitbucketCloud : alm}\n            branchesEnabled={branchesEnabled}\n            definition={def}\n            key={def.key}\n            multipleDefinitions={definitions.length > 1}\n            onCheck={props.onCheck}\n            onDelete={props.onDelete}\n            onEdit={props.onEdit}\n            status={definitionStatus[def.key]}\n          />\n        ))}\n\n        {editedDefinition && (\n          <AlmBindingDefinitionForm\n            bindingDefinition={editedDefinition}\n            help={help}\n            isSecondInstance={definitions.length === 1}\n            onCancel={props.onCancel}\n            onSubmit={props.onSubmit}\n            optionalFields={optionalFields}>\n            {form}\n          </AlmBindingDefinitionForm>\n        )}\n      </DeferredSpinner>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport {\n  AlmBindingDefinition,\n  AlmKeys,\n  AlmSettingsBindingStatus\n} from '../../../../types/alm-settings';\nimport { AlmBindingDefinitionFormChildrenProps } from './AlmBindingDefinitionForm';\nimport AlmTabRenderer from './AlmTabRenderer';\n\ninterface Props<B> {\n  alm: AlmKeys;\n  branchesEnabled: boolean;\n  createConfiguration: (data: B) => Promise<void>;\n  defaultBinding: B;\n  definitions: B[];\n  definitionStatus: T.Dict<AlmSettingsBindingStatus>;\n  form: (props: AlmBindingDefinitionFormChildrenProps<B>) => React.ReactNode;\n  help: React.ReactNode;\n  loadingAlmDefinitions: boolean;\n  loadingProjectCount: boolean;\n  multipleAlmEnabled: boolean;\n  onCheck: (definitionKey: string) => void;\n  onDelete: (definitionKey: string) => void;\n  onUpdateDefinitions: () => void;\n  optionalFields?: Array<keyof B>;\n  updateConfiguration: (data: B & { newKey?: string }) => Promise<void>;\n}\n\ninterface State<B> {\n  editedDefinition?: B;\n  submitting: boolean;\n  success: boolean;\n}\n\nexport default class AlmTab<B extends AlmBindingDefinition> extends React.PureComponent<\n  Props<B>,\n  State<B>\n> {\n  mounted = false;\n  state: State<B> = { submitting: false, success: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleCancel = () => {\n    this.setState({ editedDefinition: undefined, success: false });\n  };\n\n  handleCreate = () => {\n    this.setState({ editedDefinition: this.props.defaultBinding, success: false });\n  };\n\n  handleEdit = (definitionKey: string) => {\n    const editedDefinition = this.props.definitions.find(d => d.key === definitionKey);\n    this.setState({ editedDefinition, success: false });\n  };\n\n  handleSubmit = (config: B, originalKey: string) => {\n    const call = originalKey\n      ? this.props.updateConfiguration({ newKey: config.key, ...config, key: originalKey })\n      : this.props.createConfiguration({ ...config });\n\n    this.setState({ submitting: true });\n    return call\n      .then(() => {\n        if (this.mounted) {\n          this.setState({\n            editedDefinition: undefined,\n            submitting: false,\n            success: true\n          });\n        }\n      })\n      .then(this.props.onUpdateDefinitions)\n      .then(() => {\n        this.props.onCheck(config.key);\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ submitting: false, success: false });\n        }\n      });\n  };\n\n  render() {\n    const {\n      alm,\n      branchesEnabled,\n      definitions,\n      definitionStatus,\n      form,\n      help,\n      loadingAlmDefinitions,\n      loadingProjectCount,\n      multipleAlmEnabled,\n      optionalFields\n    } = this.props;\n    const { editedDefinition, submitting, success } = this.state;\n\n    return (\n      <AlmTabRenderer\n        alm={alm}\n        branchesEnabled={branchesEnabled}\n        definitions={definitions}\n        definitionStatus={definitionStatus}\n        editedDefinition={editedDefinition}\n        form={form}\n        help={help}\n        loadingAlmDefinitions={loadingAlmDefinitions}\n        loadingProjectCount={loadingProjectCount}\n        multipleAlmEnabled={multipleAlmEnabled}\n        onCancel={this.handleCancel}\n        onCheck={this.props.onCheck}\n        onCreate={this.handleCreate}\n        onDelete={this.props.onDelete}\n        onEdit={this.handleEdit}\n        onSubmit={this.handleSubmit}\n        optionalFields={optionalFields}\n        submitting={submitting}\n        success={success}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { ButtonLink } from 'sonar-ui-common/components/controls/buttons';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport MandatoryFieldMarker from 'sonar-ui-common/components/ui/MandatoryFieldMarker';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { AlmBindingDefinition } from '../../../../types/alm-settings';\n\nexport interface AlmBindingDefinitionFormFieldProps<B extends AlmBindingDefinition> {\n  autoFocus?: boolean;\n  help?: React.ReactNode;\n  id: string;\n  isTextArea?: boolean;\n  maxLength?: number;\n  onFieldChange: (id: keyof B, value: string) => void;\n  optional?: boolean;\n  overwriteOnly?: boolean;\n  propKey: keyof B;\n  value: string;\n}\n\nexport function AlmBindingDefinitionFormField<B extends AlmBindingDefinition>(\n  props: AlmBindingDefinitionFormFieldProps<B>\n) {\n  const {\n    autoFocus,\n    help,\n    id,\n    isTextArea,\n    maxLength,\n    optional,\n    overwriteOnly = false,\n    propKey,\n    value\n  } = props;\n  const [showField, setShowField] = React.useState(!overwriteOnly);\n\n  return (\n    <div className=\"modal-field\">\n      <label className=\"display-flex-center\" htmlFor={id}>\n        {translate('settings.almintegration.form', id)}\n        {!optional && <MandatoryFieldMarker />}\n        {help && <HelpTooltip className=\"spacer-left\" overlay={help} placement=\"right\" />}\n      </label>\n\n      {!showField && overwriteOnly && (\n        <div>\n          <p>{translate('settings.almintegration.form.secret_field')}</p>\n          <ButtonLink\n            onClick={() => {\n              props.onFieldChange(propKey, '');\n              setShowField(true);\n            }}>\n            {translate('settings.almintegration.form.update_secret_field')}\n          </ButtonLink>\n        </div>\n      )}\n\n      {showField && isTextArea && (\n        <textarea\n          className=\"settings-large-input\"\n          id={id}\n          maxLength={maxLength || 2000}\n          onChange={e => props.onFieldChange(propKey, e.currentTarget.value)}\n          required={!optional}\n          rows={5}\n          value={value}\n        />\n      )}\n\n      {showField && !isTextArea && (\n        <input\n          autoFocus={autoFocus}\n          className=\"input-super-large\"\n          id={id}\n          maxLength={maxLength || 100}\n          name={id}\n          onChange={e => props.onFieldChange(propKey, e.currentTarget.value)}\n          size={50}\n          type=\"text\"\n          value={value}\n        />\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { AzureBindingDefinition } from '../../../../types/alm-settings';\nimport { AlmBindingDefinitionFormField } from './AlmBindingDefinitionFormField';\n\nexport interface AzureFormProps {\n  formData: AzureBindingDefinition;\n  onFieldChange: (fieldId: keyof AzureBindingDefinition, value: string) => void;\n}\n\nexport default function AzureForm(props: AzureFormProps) {\n  const { formData, onFieldChange } = props;\n\n  return (\n    <>\n      <AlmBindingDefinitionFormField\n        autoFocus={true}\n        help={translate('settings.almintegration.form.name.azure.help')}\n        id=\"name.azure\"\n        onFieldChange={onFieldChange}\n        propKey=\"key\"\n        value={formData.key}\n      />\n      <AlmBindingDefinitionFormField\n        help={\n          <>\n            {translate('settings.almintegration.form.url.azure.help1')}\n            <br />\n            <em>https://ado.your-company.com/your_collection</em>\n            <br />\n            <br />\n            {translate('settings.almintegration.form.url.azure.help2')}\n            <br />\n            <em>https://dev.azure.com/your_organization</em>\n          </>\n        }\n        id=\"url.azure\"\n        maxLength={2000}\n        onFieldChange={onFieldChange}\n        propKey=\"url\"\n        value={formData.url || ''}\n      />\n      <AlmBindingDefinitionFormField\n        help={translate('settings.almintegration.form.personal_access_token.azure.help')}\n        id=\"personal_access_token\"\n        isTextArea={true}\n        onFieldChange={onFieldChange}\n        overwriteOnly={Boolean(formData.key)}\n        propKey=\"personalAccessToken\"\n        value={formData.personalAccessToken}\n      />\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { createAzureConfiguration, updateAzureConfiguration } from '../../../../api/alm-settings';\nimport { ALM_DOCUMENTATION_PATHS } from '../../../../helpers/constants';\nimport {\n  AlmKeys,\n  AlmSettingsBindingStatus,\n  AzureBindingDefinition\n} from '../../../../types/alm-settings';\nimport AlmTab from './AlmTab';\nimport AzureForm from './AzureForm';\n\nexport interface AzureTabProps {\n  branchesEnabled: boolean;\n  definitions: AzureBindingDefinition[];\n  definitionStatus: T.Dict<AlmSettingsBindingStatus>;\n  loadingAlmDefinitions: boolean;\n  loadingProjectCount: boolean;\n  multipleAlmEnabled: boolean;\n  onCheck: (definitionKey: string) => void;\n  onDelete: (definitionKey: string) => void;\n  onUpdateDefinitions: () => void;\n}\n\nexport default function AzureTab(props: AzureTabProps) {\n  const {\n    branchesEnabled,\n    multipleAlmEnabled,\n    definitions,\n    definitionStatus,\n    loadingAlmDefinitions,\n    loadingProjectCount\n  } = props;\n\n  return (\n    <div className=\"bordered\">\n      <AlmTab\n        alm={AlmKeys.Azure}\n        branchesEnabled={branchesEnabled}\n        createConfiguration={createAzureConfiguration}\n        defaultBinding={{ key: '', personalAccessToken: '', url: '' }}\n        definitions={definitions}\n        definitionStatus={definitionStatus}\n        form={childProps => <AzureForm {...childProps} />}\n        help={\n          <FormattedMessage\n            defaultMessage={translate(`settings.almintegration.azure.info`)}\n            id=\"settings.almintegration.azure.info\"\n            values={{\n              link: (\n                <Link target=\"_blank\" to={ALM_DOCUMENTATION_PATHS[AlmKeys.Azure]}>\n                  {translate('learn_more')}\n                </Link>\n              )\n            }}\n          />\n        }\n        loadingAlmDefinitions={loadingAlmDefinitions}\n        loadingProjectCount={loadingProjectCount}\n        multipleAlmEnabled={multipleAlmEnabled}\n        onCheck={props.onCheck}\n        onDelete={props.onDelete}\n        onUpdateDefinitions={props.onUpdateDefinitions}\n        updateConfiguration={updateAzureConfiguration}\n      />\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport RadioToggle from 'sonar-ui-common/components/controls/RadioToggle';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  AlmKeys,\n  BitbucketBindingDefinition,\n  BitbucketCloudBindingDefinition,\n  isBitbucketBindingDefinition,\n  isBitbucketCloudBindingDefinition\n} from '../../../../types/alm-settings';\nimport { AlmBindingDefinitionFormField } from './AlmBindingDefinitionFormField';\n\nexport interface BitbucketFormProps {\n  formData: BitbucketBindingDefinition | BitbucketCloudBindingDefinition;\n  isCreating: boolean;\n  onFieldChange: (\n    fieldId: keyof (BitbucketBindingDefinition & BitbucketCloudBindingDefinition),\n    value: string\n  ) => void;\n  onSelectVariant: (variant: AlmKeys.BitbucketServer | AlmKeys.BitbucketCloud) => void;\n  variant?: AlmKeys.BitbucketServer | AlmKeys.BitbucketCloud;\n}\n\nexport default function BitbucketForm(props: BitbucketFormProps) {\n  const { formData, isCreating, variant } = props;\n\n  return (\n    <div>\n      {isCreating && (\n        <>\n          <strong>{translate('settings.almintegration.form.choose_bitbucket_variant')}</strong>\n          <RadioToggle\n            className=\"little-spacer-top big-spacer-bottom\"\n            name=\"variant\"\n            onCheck={props.onSelectVariant}\n            options={[\n              {\n                label: 'Bitbucket Server',\n                value: AlmKeys.BitbucketServer\n              },\n              { label: 'Bitbucket Cloud', value: AlmKeys.BitbucketCloud }\n            ]}\n            value={variant}\n          />\n        </>\n      )}\n\n      {variant === AlmKeys.BitbucketServer && isBitbucketBindingDefinition(formData) && (\n        <div>\n          <AlmBindingDefinitionFormField\n            autoFocus={true}\n            help={translate('settings.almintegration.form.name.bitbucket.help')}\n            id=\"name.bitbucket\"\n            maxLength={100}\n            onFieldChange={props.onFieldChange}\n            propKey=\"key\"\n            value={formData.key}\n          />\n          <AlmBindingDefinitionFormField\n            help={\n              <FormattedMessage\n                defaultMessage={translate('settings.almintegration.form.url.bitbucket.help')}\n                id=\"settings.almintegration.form.url.bitbucket.help\"\n                values={{ example: 'https://bitbucket-server.your-company.com' }}\n              />\n            }\n            id=\"url.bitbucket\"\n            maxLength={2000}\n            onFieldChange={props.onFieldChange}\n            propKey=\"url\"\n            value={formData.url}\n          />\n          <AlmBindingDefinitionFormField\n            id=\"personal_access_token\"\n            isTextArea={true}\n            onFieldChange={props.onFieldChange}\n            overwriteOnly={Boolean(formData.key)}\n            propKey=\"personalAccessToken\"\n            value={formData.personalAccessToken}\n          />\n        </div>\n      )}\n\n      {variant === AlmKeys.BitbucketCloud && isBitbucketCloudBindingDefinition(formData) && (\n        <div>\n          <AlmBindingDefinitionFormField\n            autoFocus={true}\n            help={translate('settings.almintegration.form.name.bitbucketcloud.help')}\n            id=\"name.bitbucket\"\n            maxLength={100}\n            onFieldChange={props.onFieldChange}\n            propKey=\"key\"\n            value={formData.key}\n          />\n          <AlmBindingDefinitionFormField\n            help={\n              <FormattedMessage\n                defaultMessage={translate(\n                  'settings.almintegration.form.workspace.bitbucketcloud.help'\n                )}\n                id=\"settings.almintegration.form.workspace.bitbucketcloud.help\"\n                values={{\n                  example: (\n                    <>\n                      {'https://bitbucket.org/'}\n                      <strong>{'{workspace}'}</strong>\n                      {'/{repository}'}\n                    </>\n                  )\n                }}\n              />\n            }\n            id=\"workspace.bitbucketcloud\"\n            maxLength={2000}\n            onFieldChange={props.onFieldChange}\n            propKey=\"workspace\"\n            value={formData.workspace}\n          />\n          <AlmBindingDefinitionFormField\n            id=\"client_id.bitbucketcloud\"\n            onFieldChange={props.onFieldChange}\n            propKey=\"clientId\"\n            value={formData.clientId}\n          />\n          <AlmBindingDefinitionFormField\n            id=\"client_secret.bitbucketcloud\"\n            onFieldChange={props.onFieldChange}\n            overwriteOnly={Boolean(formData.key)}\n            propKey=\"clientSecret\"\n            value={formData.clientSecret}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { ALM_DOCUMENTATION_PATHS } from '../../../../helpers/constants';\nimport {\n  AlmKeys,\n  AlmSettingsBindingStatus,\n  BitbucketBindingDefinition,\n  BitbucketCloudBindingDefinition\n} from '../../../../types/alm-settings';\nimport AlmTabRenderer from './AlmTabRenderer';\nimport BitbucketForm from './BitbucketForm';\n\nexport interface BitbucketTabRendererProps {\n  branchesEnabled: boolean;\n  definitionStatus: T.Dict<AlmSettingsBindingStatus>;\n  editedDefinition?: BitbucketBindingDefinition | BitbucketCloudBindingDefinition;\n  definitions: Array<BitbucketBindingDefinition | BitbucketCloudBindingDefinition>;\n  isCreating: boolean;\n  loadingAlmDefinitions: boolean;\n  loadingProjectCount: boolean;\n  multipleAlmEnabled: boolean;\n  onCancel: () => void;\n  onCheck: (definitionKey: string) => void;\n  onCreate: () => void;\n  onDelete: (definitionKey: string) => void;\n  onEdit: (definitionKey: string) => void;\n  onSelectVariant: (variant: AlmKeys.BitbucketServer | AlmKeys.BitbucketCloud) => void;\n  onSubmit: (\n    config: BitbucketBindingDefinition | BitbucketCloudBindingDefinition,\n    originalKey: string\n  ) => void;\n  submitting: boolean;\n  success: boolean;\n  variant?: AlmKeys.BitbucketServer | AlmKeys.BitbucketCloud;\n}\n\nexport default function BitbucketTabRenderer(props: BitbucketTabRendererProps) {\n  const {\n    branchesEnabled,\n    editedDefinition,\n    definitions,\n    definitionStatus,\n    isCreating,\n    loadingAlmDefinitions,\n    loadingProjectCount,\n    multipleAlmEnabled,\n    submitting,\n    success,\n    variant\n  } = props;\n\n  let help;\n  if (variant === AlmKeys.BitbucketServer) {\n    help = (\n      <>\n        <h3>{translate('onboarding.create_project.pat_help.title')}</h3>\n\n        <p className=\"big-spacer-top\">{translate('settings.almintegration.bitbucket.help_1')}</p>\n\n        <ul className=\"big-spacer-top list-styled\">\n          <li>{translate('settings.almintegration.bitbucket.help_2')}</li>\n          <li>{translate('settings.almintegration.bitbucket.help_3')}</li>\n        </ul>\n\n        <p className=\"big-spacer-top big-spacer-bottom\">\n          <Link target=\"_blank\" to={ALM_DOCUMENTATION_PATHS[AlmKeys.BitbucketServer]}>\n            {translate('learn_more')}\n          </Link>\n        </p>\n      </>\n    );\n  } else if (variant === AlmKeys.BitbucketCloud) {\n    help = (\n      <FormattedMessage\n        defaultMessage={translate(`settings.almintegration.bitbucketcloud.info`)}\n        id=\"settings.almintegration.bitbucketcloud.info\"\n        values={{\n          link: (\n            <Link target=\"_blank\" to={ALM_DOCUMENTATION_PATHS[AlmKeys.BitbucketCloud]}>\n              {translate('learn_more')}\n            </Link>\n          )\n        }}\n      />\n    );\n  }\n\n  return (\n    <div className=\"bordered\">\n      <AlmTabRenderer\n        branchesEnabled={branchesEnabled}\n        alm={AlmKeys.BitbucketServer} // Always use Bitbucket Server for the translation keys.\n        definitions={definitions}\n        definitionStatus={definitionStatus}\n        editedDefinition={editedDefinition}\n        form={childProps => (\n          <BitbucketForm\n            isCreating={isCreating}\n            onSelectVariant={props.onSelectVariant}\n            variant={variant}\n            {...childProps}\n          />\n        )}\n        help={help}\n        loadingAlmDefinitions={loadingAlmDefinitions}\n        loadingProjectCount={loadingProjectCount}\n        multipleAlmEnabled={multipleAlmEnabled}\n        onCancel={props.onCancel}\n        onCheck={props.onCheck}\n        onCreate={props.onCreate}\n        onDelete={props.onDelete}\n        onEdit={props.onEdit}\n        onSubmit={props.onSubmit}\n        submitting={submitting}\n        success={success}\n      />\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport {\n  createBitbucketCloudConfiguration,\n  createBitbucketConfiguration,\n  updateBitbucketCloudConfiguration,\n  updateBitbucketConfiguration\n} from '../../../../api/alm-settings';\nimport {\n  AlmKeys,\n  AlmSettingsBindingStatus,\n  BitbucketBindingDefinition,\n  BitbucketCloudBindingDefinition,\n  isBitbucketBindingDefinition\n} from '../../../../types/alm-settings';\nimport BitbucketTabRenderer from './BitbucketTabRenderer';\n\ninterface Props {\n  branchesEnabled: boolean;\n  definitions: Array<BitbucketBindingDefinition | BitbucketCloudBindingDefinition>;\n  definitionStatus: T.Dict<AlmSettingsBindingStatus>;\n  loadingAlmDefinitions: boolean;\n  loadingProjectCount: boolean;\n  multipleAlmEnabled: boolean;\n  onCheck: (definitionKey: string) => void;\n  onDelete: (definitionKey: string) => void;\n  onUpdateDefinitions: () => void;\n}\n\ninterface State {\n  editedDefinition?: BitbucketBindingDefinition | BitbucketCloudBindingDefinition;\n  isCreating: boolean;\n  submitting: boolean;\n  success: boolean;\n  variant?: AlmKeys.BitbucketServer | AlmKeys.BitbucketCloud;\n}\n\nexport const DEFAULT_SERVER_BINDING = { key: '', url: '', personalAccessToken: '' };\nexport const DEFAULT_CLOUD_BINDING = { key: '', clientId: '', clientSecret: '', workspace: '' };\n\nexport default class BitbucketTab extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State = { isCreating: false, submitting: false, success: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleCancel = () => {\n    this.setState({\n      editedDefinition: undefined,\n      isCreating: false,\n      success: false,\n      variant: undefined\n    });\n  };\n\n  handleCreate = () => {\n    this.setState({\n      editedDefinition: DEFAULT_SERVER_BINDING, // Default to Bitbucket Server.\n      isCreating: true,\n      success: false,\n      variant: undefined\n    });\n  };\n\n  handleSelectVariant = (variant: AlmKeys.BitbucketServer | AlmKeys.BitbucketCloud) => {\n    this.setState({\n      variant,\n      editedDefinition:\n        variant === AlmKeys.BitbucketServer ? DEFAULT_SERVER_BINDING : DEFAULT_CLOUD_BINDING\n    });\n  };\n\n  handleEdit = (definitionKey: string) => {\n    const editedDefinition = this.props.definitions.find(d => d.key === definitionKey);\n    const variant = isBitbucketBindingDefinition(editedDefinition)\n      ? AlmKeys.BitbucketServer\n      : AlmKeys.BitbucketCloud;\n    this.setState({ editedDefinition, variant, success: false });\n  };\n\n  handleSubmit = (\n    config: BitbucketBindingDefinition | BitbucketCloudBindingDefinition,\n    originalKey: string\n  ) => {\n    const call = originalKey\n      ? this.updateConfiguration({ newKey: config.key, ...config, key: originalKey })\n      : this.createConfiguration({ ...config });\n\n    this.setState({ submitting: true });\n    return call\n      .then(() => {\n        if (this.mounted) {\n          this.setState({\n            editedDefinition: undefined,\n            isCreating: false,\n            submitting: false,\n            success: true\n          });\n        }\n      })\n      .then(this.props.onUpdateDefinitions)\n      .then(() => {\n        this.props.onCheck(config.key);\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ submitting: false, success: false });\n        }\n      });\n  };\n\n  updateConfiguration = (\n    config: (BitbucketBindingDefinition | BitbucketCloudBindingDefinition) & { newKey: string }\n  ) => {\n    if (isBitbucketBindingDefinition(config)) {\n      return updateBitbucketConfiguration(config);\n    }\n    return updateBitbucketCloudConfiguration(config);\n  };\n\n  createConfiguration = (config: BitbucketBindingDefinition | BitbucketCloudBindingDefinition) => {\n    if (isBitbucketBindingDefinition(config)) {\n      return createBitbucketConfiguration(config);\n    }\n    return createBitbucketCloudConfiguration(config);\n  };\n\n  render() {\n    const {\n      branchesEnabled,\n      definitions,\n      definitionStatus,\n      loadingAlmDefinitions,\n      loadingProjectCount,\n      multipleAlmEnabled\n    } = this.props;\n    const { editedDefinition, isCreating, submitting, success, variant } = this.state;\n\n    return (\n      <BitbucketTabRenderer\n        branchesEnabled={branchesEnabled}\n        definitions={definitions}\n        definitionStatus={definitionStatus}\n        editedDefinition={editedDefinition}\n        isCreating={isCreating}\n        loadingAlmDefinitions={loadingAlmDefinitions}\n        loadingProjectCount={loadingProjectCount}\n        multipleAlmEnabled={multipleAlmEnabled}\n        onCancel={this.handleCancel}\n        onCheck={this.props.onCheck}\n        onCreate={this.handleCreate}\n        onDelete={this.props.onDelete}\n        onEdit={this.handleEdit}\n        onSelectVariant={this.handleSelectVariant}\n        onSubmit={this.handleSubmit}\n        submitting={submitting}\n        success={success}\n        variant={variant}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport ConfirmModal from 'sonar-ui-common/components/controls/ConfirmModal';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\n\nexport interface DeleteModalProps {\n  id: string;\n  projectCount?: number;\n  onDelete: (id: string) => void;\n  onCancel: () => void;\n}\n\nfunction showProjectCountWarning(projectCount?: number) {\n  if (projectCount === undefined) {\n    return <p>{translate('settings.almintegration.delete.no_info')}</p>;\n  }\n\n  return projectCount ? (\n    <p>{translateWithParameters('settings.almintegration.delete.info', projectCount)} </p>\n  ) : null;\n}\n\nexport default function DeleteModal({ id, onDelete, onCancel, projectCount }: DeleteModalProps) {\n  return (\n    <ConfirmModal\n      confirmButtonText={translate('delete')}\n      confirmData={id}\n      header={translate('settings.almintegration.delete.header')}\n      isDestructive={true}\n      onClose={onCancel}\n      onConfirm={onDelete}>\n      <>\n        <p className=\"spacer-bottom\">\n          <FormattedMessage\n            defaultMessage={translate('settings.almintegration.delete.message')}\n            id=\"settings.almintegration.delete.message\"\n            values={{ id: <b>{id}</b> }}\n          />\n        </p>\n        {showProjectCountWarning(projectCount)}\n      </>\n    </ConfirmModal>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button, ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport Modal from 'sonar-ui-common/components/controls/Modal';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { Setting } from '../../../types/settings';\nimport { getDefaultValue, getSettingValue, isEmptyValue } from '../utils';\n\ntype Props = {\n  changedValue: string;\n  hasError: boolean;\n  hasValueChanged: boolean;\n  isDefault: boolean;\n  onCancel: () => void;\n  onReset: () => void;\n  onSave: () => void;\n  setting: Setting;\n};\n\ntype State = { reseting: boolean };\n\nexport default class DefinitionActions extends React.PureComponent<Props, State> {\n  state: State = { reseting: false };\n\n  handleClose = () => {\n    this.setState({ reseting: false });\n  };\n\n  handleReset = () => {\n    this.setState({ reseting: true });\n  };\n\n  handleSubmit = () => {\n    this.props.onReset();\n    this.handleClose();\n  };\n\n  renderModal() {\n    const header = translate('settings.reset_confirm.title');\n    return (\n      <Modal contentLabel={header} onRequestClose={this.handleClose}>\n        <header className=\"modal-head\">\n          <h2>{header}</h2>\n        </header>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"modal-body\">\n            <p>{translate('settings.reset_confirm.description')}</p>\n          </div>\n          <footer className=\"modal-foot\">\n            <SubmitButton className=\"button-red\">{translate('reset_verb')}</SubmitButton>\n            <ResetButtonLink onClick={this.handleClose}>{translate('cancel')}</ResetButtonLink>\n          </footer>\n        </form>\n      </Modal>\n    );\n  }\n\n  render() {\n    const { setting, isDefault, changedValue, hasValueChanged } = this.props;\n\n    const hasValueToResetTo = !isEmptyValue(setting.definition, getSettingValue(setting));\n    const hasBeenChangedToEmptyValue =\n      changedValue != null && isEmptyValue(setting.definition, changedValue);\n    const showReset =\n      hasValueToResetTo && (hasBeenChangedToEmptyValue || (!isDefault && !hasValueChanged));\n\n    return (\n      <>\n        {isDefault && !hasValueChanged && (\n          <div className=\"spacer-top note\" style={{ lineHeight: '24px' }}>\n            {translate('settings._default')}\n          </div>\n        )}\n        <div className=\"settings-definition-changes nowrap\">\n          {hasValueChanged && (\n            <Button\n              className=\"spacer-right button-success\"\n              disabled={this.props.hasError}\n              onClick={this.props.onSave}>\n              {translate('save')}\n            </Button>\n          )}\n\n          {showReset && (\n            <Button className=\"spacer-right\" onClick={this.handleReset}>\n              {translate('reset_verb')}\n            </Button>\n          )}\n\n          {hasValueChanged && (\n            <ResetButtonLink className=\"spacer-right\" onClick={this.props.onCancel}>\n              {translate('cancel')}\n            </ResetButtonLink>\n          )}\n\n          {showReset && (\n            <span className=\"note\">\n              {translate('default')}\n              {': '}\n              {getDefaultValue(setting)}\n            </span>\n          )}\n\n          {this.state.reseting && this.renderModal()}\n        </div>\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Toggle from 'sonar-ui-common/components/controls/Toggle';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { DefaultSpecializedInputProps } from '../../utils';\n\ninterface Props extends DefaultSpecializedInputProps {\n  value: string | boolean | undefined;\n}\n\nexport default function InputForBoolean({ onChange, name, value }: Props) {\n  const displayedValue = value != null ? value : false;\n  return (\n    <div className=\"display-inline-block text-top\">\n      <Toggle name={name} onChange={onChange} value={displayedValue} />\n      {value == null && <span className=\"spacer-left note\">{translate('settings.not_set')}</span>}\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { DefaultSpecializedInputProps } from '../../utils';\n\nconst JSON_SPACE_SIZE = 4;\n\ninterface State {\n  formatError: boolean;\n}\n\nexport default class InputForJSON extends React.PureComponent<DefaultSpecializedInputProps, State> {\n  state: State = { formatError: false };\n\n  handleInputChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    this.setState({ formatError: false });\n    this.props.onChange(event.target.value);\n  };\n\n  format = () => {\n    const { value } = this.props;\n    try {\n      if (value) {\n        this.props.onChange(JSON.stringify(JSON.parse(value), undefined, JSON_SPACE_SIZE));\n      }\n    } catch (e) {\n      this.setState({ formatError: true });\n    }\n  };\n\n  render() {\n    const { formatError } = this.state;\n    return (\n      <div className=\"display-flex-end\">\n        <textarea\n          className=\"settings-large-input text-top monospaced spacer-right\"\n          name={this.props.name}\n          onChange={this.handleInputChange}\n          rows={5}\n          value={this.props.value || ''}\n        />\n        <div>\n          {formatError && <Alert variant=\"info\">{translate('settings.json.format_error')} </Alert>}\n          <Button className=\"spacer-top\" onClick={this.format}>\n            {translate('settings.json.format')}\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport * as React from 'react';\nimport { DefaultSpecializedInputProps } from '../../utils';\n\ninterface Props extends DefaultSpecializedInputProps {\n  className?: string;\n  type: string;\n  value: string | number;\n}\n\nexport default class SimpleInput extends React.PureComponent<Props> {\n  handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.props.onChange(event.currentTarget.value);\n  };\n\n  handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.keyCode === 13 && this.props.onSave) {\n      this.props.onSave();\n    } else if (event.keyCode === 27 && this.props.onCancel) {\n      this.props.onCancel();\n    }\n  };\n\n  render() {\n    return (\n      <input\n        className={classNames('text-top', this.props.className)}\n        name={this.props.name}\n        onChange={this.handleInputChange}\n        onKeyDown={this.handleKeyDown}\n        type={this.props.type}\n        value={this.props.value || ''}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DefaultSpecializedInputProps } from '../../utils';\nimport SimpleInput from './SimpleInput';\n\nexport default function InputForNumber(props: DefaultSpecializedInputProps) {\n  return <SimpleInput {...props} className=\"input-small\" type=\"text\" />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Button } from 'sonar-ui-common/components/controls/buttons';\nimport LockIcon from 'sonar-ui-common/components/icons/LockIcon';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { colors } from '../../../../app/theme';\nimport { DefaultSpecializedInputProps } from '../../utils';\n\ninterface State {\n  changing: boolean;\n}\n\nexport default class InputForPassword extends React.PureComponent<\n  DefaultSpecializedInputProps,\n  State\n> {\n  state: State = {\n    changing: !this.props.value\n  };\n\n  componentWillReceiveProps(nextProps: DefaultSpecializedInputProps) {\n    /*\n     * Reset `changing` if:\n     *  - the value is reset (valueChanged -> !valueChanged)\n     *     or\n     *  - the value changes from outside the input (i.e. store update/reset/cancel)\n     */\n    if (\n      (this.props.hasValueChanged || this.props.value !== nextProps.value) &&\n      !nextProps.hasValueChanged\n    ) {\n      this.setState({ changing: !nextProps.value });\n    }\n  }\n\n  handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.props.onChange(event.target.value);\n  };\n\n  handleChangeClick = () => {\n    this.setState({ changing: true });\n  };\n\n  renderInput() {\n    return (\n      <form>\n        <input className=\"hidden\" type=\"password\" />\n        <input\n          autoComplete=\"off\"\n          autoFocus={this.state.changing && this.props.value}\n          className=\"js-password-input settings-large-input text-top\"\n          name={this.props.name}\n          onChange={this.handleInputChange}\n          type=\"password\"\n          value={this.props.value}\n        />\n      </form>\n    );\n  }\n\n  render() {\n    if (this.state.changing) {\n      return this.renderInput();\n    }\n\n    return (\n      <>\n        <LockIcon className=\"text-middle big-spacer-right\" fill={colors.gray60} />\n        <Button className=\"text-middle\" onClick={this.handleChangeClick}>\n          {translate('change_verb')}\n        </Button>\n      </>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { SettingCategoryDefinition } from '../../../../types/settings';\nimport { DefaultSpecializedInputProps } from '../../utils';\n\ntype Props = DefaultSpecializedInputProps & Pick<SettingCategoryDefinition, 'options'>;\n\nexport default class InputForSingleSelectList extends React.PureComponent<Props> {\n  handleInputChange = ({ value }: { value: string }) => {\n    this.props.onChange(value);\n  };\n\n  render() {\n    const options = this.props.options.map(option => ({\n      label: option,\n      value: option\n    }));\n\n    return (\n      <Select\n        className=\"settings-large-input\"\n        clearable={false}\n        name={this.props.name}\n        onChange={this.handleInputChange}\n        options={options}\n        value={this.props.value}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DefaultSpecializedInputProps } from '../../utils';\nimport SimpleInput from './SimpleInput';\n\nexport default function InputForString(props: DefaultSpecializedInputProps) {\n  return <SimpleInput {...props} className=\"settings-large-input\" type=\"text\" />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DefaultSpecializedInputProps } from '../../utils';\n\nexport default class InputForText extends React.PureComponent<DefaultSpecializedInputProps> {\n  handleInputChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    this.props.onChange(event.target.value);\n  };\n\n  render() {\n    return (\n      <textarea\n        className=\"settings-large-input text-top\"\n        name={this.props.name}\n        onChange={this.handleInputChange}\n        rows={5}\n        value={this.props.value || ''}\n      />\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SettingType } from '../../../../types/settings';\nimport {\n  DefaultInputProps,\n  DefaultSpecializedInputProps,\n  getUniqueName,\n  isDefaultOrInherited\n} from '../../utils';\nimport InputForBoolean from './InputForBoolean';\nimport InputForJSON from './InputForJSON';\nimport InputForNumber from './InputForNumber';\nimport InputForPassword from './InputForPassword';\nimport InputForSingleSelectList from './InputForSingleSelectList';\nimport InputForString from './InputForString';\nimport InputForText from './InputForText';\n\nconst typeMapping: {\n  [type in SettingType]?: React.ComponentType<DefaultSpecializedInputProps>;\n} = {\n  STRING: InputForString,\n  TEXT: InputForText,\n  JSON: InputForJSON,\n  PASSWORD: InputForPassword,\n  BOOLEAN: InputForBoolean,\n  INTEGER: InputForNumber,\n  LONG: InputForNumber,\n  FLOAT: InputForNumber\n};\n\ninterface Props extends DefaultInputProps {\n  name?: string;\n}\n\nexport default class PrimitiveInput extends React.PureComponent<Props> {\n  render() {\n    const { setting, ...other } = this.props;\n    const { definition } = setting;\n\n    const name = this.props.name || getUniqueName(definition);\n\n    if (definition.type === 'SINGLE_SELECT_LIST') {\n      return (\n        <InputForSingleSelectList\n          isDefault={isDefaultOrInherited(setting)}\n          name={name}\n          options={definition.options}\n          {...other}\n        />\n      );\n    }\n\n    const InputComponent = (definition.type && typeMapping[definition.type]) || InputForString;\n    return <InputComponent isDefault={isDefaultOrInherited(setting)} name={name} {...other} />;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DeleteButton } from 'sonar-ui-common/components/controls/buttons';\nimport { DefaultInputProps, getEmptyValue } from '../../utils';\nimport PrimitiveInput from './PrimitiveInput';\n\nexport default class MultiValueInput extends React.PureComponent<DefaultInputProps> {\n  ensureValue = () => {\n    return this.props.value || [];\n  };\n\n  handleSingleInputChange = (index: number, value: any) => {\n    const newValue = [...this.ensureValue()];\n    newValue.splice(index, 1, value);\n    this.props.onChange(newValue);\n  };\n\n  handleDeleteValue = (index: number) => {\n    const newValue = [...this.ensureValue()];\n    newValue.splice(index, 1);\n    this.props.onChange(newValue);\n  };\n\n  renderInput(value: any, index: number, isLast: boolean) {\n    const { setting } = this.props;\n    return (\n      <li className=\"spacer-bottom\" key={index}>\n        <PrimitiveInput\n          hasValueChanged={this.props.hasValueChanged}\n          onChange={value => this.handleSingleInputChange(index, value)}\n          setting={{\n            ...setting,\n            definition: { ...setting.definition, multiValues: false },\n            values: undefined\n          }}\n          value={value}\n        />\n\n        {!isLast && (\n          <div className=\"display-inline-block spacer-left\">\n            <DeleteButton\n              className=\"js-remove-value\"\n              onClick={() => this.handleDeleteValue(index)}\n            />\n          </div>\n        )}\n      </li>\n    );\n  }\n\n  render() {\n    const displayedValue = [...this.ensureValue(), ...getEmptyValue(this.props.setting.definition)];\n    return (\n      <div>\n        <ul>\n          {displayedValue.map((value, index) =>\n            this.renderInput(value, index, index === displayedValue.length - 1)\n          )}\n        </ul>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DeleteButton } from 'sonar-ui-common/components/controls/buttons';\nimport { DefaultInputProps, getEmptyValue, getUniqueName, isCategoryDefinition } from '../../utils';\nimport PrimitiveInput from './PrimitiveInput';\n\nexport default class PropertySetInput extends React.PureComponent<DefaultInputProps> {\n  ensureValue() {\n    return this.props.value || [];\n  }\n\n  handleDeleteValue = (index: number) => {\n    const newValue = [...this.ensureValue()];\n    newValue.splice(index, 1);\n    this.props.onChange(newValue);\n  };\n\n  handleInputChange = (index: number, fieldKey: string, value: any) => {\n    const emptyValue = getEmptyValue(this.props.setting.definition)[0];\n    const newValue = [...this.ensureValue()];\n    const newFields = { ...emptyValue, ...newValue[index], [fieldKey]: value };\n    newValue.splice(index, 1, newFields);\n    return this.props.onChange(newValue);\n  };\n\n  renderFields(fieldValues: any, index: number, isLast: boolean) {\n    const { setting } = this.props;\n    const { definition } = setting;\n\n    return (\n      <tr key={index}>\n        {isCategoryDefinition(definition) &&\n          definition.fields.map(field => (\n            <td key={field.key}>\n              <PrimitiveInput\n                hasValueChanged={this.props.hasValueChanged}\n                name={getUniqueName(definition, field.key)}\n                onChange={value => this.handleInputChange(index, field.key, value)}\n                setting={{ ...setting, definition: field, value: fieldValues[field.key] }}\n                value={fieldValues[field.key]}\n              />\n            </td>\n          ))}\n        <td className=\"thin nowrap text-middle\">\n          {!isLast && (\n            <DeleteButton\n              className=\"js-remove-value\"\n              onClick={() => this.handleDeleteValue(index)}\n            />\n          )}\n        </td>\n      </tr>\n    );\n  }\n\n  render() {\n    const { definition } = this.props.setting;\n    const displayedValue = [...this.ensureValue(), ...getEmptyValue(definition)];\n\n    return (\n      <div>\n        <table\n          className=\"data zebra-hover no-outer-padding\"\n          style={{ width: 'auto', minWidth: 480, marginTop: -12 }}>\n          <thead>\n            <tr>\n              {isCategoryDefinition(definition) &&\n                definition.fields.map(field => (\n                  <th key={field.key}>\n                    {field.name}\n                    {field.description != null && (\n                      <span className=\"spacer-top small\">{field.description}</span>\n                    )}\n                  </th>\n                ))}\n              <th>&nbsp;</th>\n            </tr>\n          </thead>\n          <tbody>\n            {displayedValue.map((fieldValues, index) =>\n              this.renderFields(fieldValues, index, index === displayedValue.length - 1)\n            )}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { DefaultInputProps, isCategoryDefinition } from '../../utils';\nimport MultiValueInput from './MultiValueInput';\nimport PrimitiveInput from './PrimitiveInput';\nimport PropertySetInput from './PropertySetInput';\n\nexport default function Input(props: DefaultInputProps) {\n  const { definition } = props.setting;\n\n  if (isCategoryDefinition(definition) && definition.multiValues) {\n    return <MultiValueInput {...props} />;\n  }\n\n  if (definition.type === 'PROPERTY_SET') {\n    return <PropertySetInput {...props} />;\n  }\n\n  return <PrimitiveInput {...props} />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport AlertErrorIcon from 'sonar-ui-common/components/icons/AlertErrorIcon';\nimport AlertSuccessIcon from 'sonar-ui-common/components/icons/AlertSuccessIcon';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { sanitizeStringRestricted } from '../../../helpers/sanitize';\nimport {\n  getSettingsAppChangedValue,\n  getSettingsAppValidationMessage,\n  isSettingsAppLoading,\n  Store\n} from '../../../store/rootReducer';\nimport { Setting } from '../../../types/settings';\nimport { checkValue, resetValue, saveValue } from '../store/actions';\nimport { cancelChange, changeValue, passValidation } from '../store/settingsPage';\nimport {\n  getPropertyDescription,\n  getPropertyName,\n  getSettingValue,\n  isDefaultOrInherited\n} from '../utils';\nimport DefinitionActions from './DefinitionActions';\nimport Input from './inputs/Input';\n\ninterface Props {\n  cancelChange: (key: string) => void;\n  changeValue: (key: string, value: any) => void;\n  changedValue: any;\n  checkValue: (key: string) => boolean;\n  component?: T.Component;\n  loading: boolean;\n  passValidation: (key: string) => void;\n  resetValue: (key: string, component?: string) => Promise<void>;\n  saveValue: (key: string, component?: string) => Promise<void>;\n  setting: Setting;\n  validationMessage?: string;\n}\n\ninterface State {\n  success: boolean;\n}\n\nconst SAFE_SET_STATE_DELAY = 3000;\n\nexport class Definition extends React.PureComponent<Props, State> {\n  timeout?: number;\n  mounted = false;\n  state = { success: false };\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  safeSetState(changes: State) {\n    if (this.mounted) {\n      this.setState(changes);\n    }\n  }\n\n  handleChange = (value: any) => {\n    clearTimeout(this.timeout);\n    this.props.changeValue(this.props.setting.definition.key, value);\n    this.handleCheck();\n  };\n\n  handleReset = () => {\n    const { component, setting } = this.props;\n    const { definition } = setting;\n    const componentKey = component && component.key;\n    return this.props.resetValue(definition.key, componentKey).then(() => {\n      this.props.cancelChange(definition.key);\n      this.safeSetState({ success: true });\n      this.timeout = window.setTimeout(\n        () => this.safeSetState({ success: false }),\n        SAFE_SET_STATE_DELAY\n      );\n    });\n  };\n\n  handleCancel = () => {\n    const { setting } = this.props;\n    this.props.cancelChange(setting.definition.key);\n    this.props.passValidation(setting.definition.key);\n  };\n\n  handleCheck = () => {\n    const { setting } = this.props;\n    this.props.checkValue(setting.definition.key);\n  };\n\n  handleSave = () => {\n    if (this.props.changedValue != null) {\n      this.safeSetState({ success: false });\n      const { component, setting } = this.props;\n      this.props.saveValue(setting.definition.key, component && component.key).then(\n        () => {\n          this.safeSetState({ success: true });\n          this.timeout = window.setTimeout(\n            () => this.safeSetState({ success: false }),\n            SAFE_SET_STATE_DELAY\n          );\n        },\n        () => {\n          /* Do nothing */\n        }\n      );\n    }\n  };\n\n  render() {\n    const { changedValue, loading, setting, validationMessage } = this.props;\n    const { definition } = setting;\n    const propertyName = getPropertyName(definition);\n    const hasError = validationMessage != null;\n    const hasValueChanged = changedValue != null;\n    const effectiveValue = hasValueChanged ? changedValue : getSettingValue(setting);\n    const isDefault = isDefaultOrInherited(setting);\n    const description = getPropertyDescription(definition);\n    return (\n      <div\n        className={classNames('settings-definition', {\n          'settings-definition-changed': hasValueChanged\n        })}\n        data-key={definition.key}>\n        <div className=\"settings-definition-left\">\n          <h3 className=\"settings-definition-name\" title={propertyName}>\n            {propertyName}\n          </h3>\n\n          {description && (\n            <div\n              className=\"markdown small spacer-top\"\n              // eslint-disable-next-line react/no-danger\n              dangerouslySetInnerHTML={{ __html: sanitizeStringRestricted(description) }}\n            />\n          )}\n\n          <div className=\"settings-definition-key note little-spacer-top\">\n            {translateWithParameters('settings.key_x', definition.key)}\n          </div>\n        </div>\n\n        <div className=\"settings-definition-right\">\n          <div className=\"settings-definition-state\">\n            {loading && (\n              <span className=\"text-info\">\n                <i className=\"spinner spacer-right\" />\n                {translate('settings.state.saving')}\n              </span>\n            )}\n\n            {!loading && validationMessage && (\n              <span className=\"text-danger\">\n                <AlertErrorIcon className=\"spacer-right\" />\n                <span>\n                  {translateWithParameters('settings.state.validation_failed', validationMessage)}\n                </span>\n              </span>\n            )}\n\n            {!loading && !hasError && this.state.success && (\n              <span className=\"text-success\">\n                <AlertSuccessIcon className=\"spacer-right\" />\n                {translate('settings.state.saved')}\n              </span>\n            )}\n          </div>\n\n          <Input\n            hasValueChanged={hasValueChanged}\n            onCancel={this.handleCancel}\n            onChange={this.handleChange}\n            onSave={this.handleSave}\n            setting={setting}\n            value={effectiveValue}\n          />\n\n          <DefinitionActions\n            changedValue={changedValue}\n            hasError={hasError}\n            hasValueChanged={hasValueChanged}\n            isDefault={isDefault}\n            onCancel={this.handleCancel}\n            onReset={this.handleReset}\n            onSave={this.handleSave}\n            setting={setting}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store, ownProps: Pick<Props, 'setting'>) => ({\n  changedValue: getSettingsAppChangedValue(state, ownProps.setting.definition.key),\n  loading: isSettingsAppLoading(state, ownProps.setting.definition.key),\n  validationMessage: getSettingsAppValidationMessage(state, ownProps.setting.definition.key)\n});\n\nconst mapDispatchToProps = {\n  cancelChange: cancelChange as any,\n  changeValue: changeValue as any,\n  checkValue: checkValue as any,\n  passValidation: passValidation as any,\n  resetValue: resetValue as any,\n  saveValue: saveValue as any\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Definition);\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Setting } from '../../../types/settings';\nimport Definition from './Definition';\n\ninterface Props {\n  component?: T.Component;\n  settings: Setting[];\n}\n\nexport default function DefinitionsList({ component, settings }: Props) {\n  return (\n    <ul className=\"settings-definitions-list\">\n      {settings.map(setting => (\n        <li key={setting.definition.key}>\n          <Definition component={component} setting={setting} />\n        </li>\n      ))}\n    </ul>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport MandatoryFieldMarker from 'sonar-ui-common/components/ui/MandatoryFieldMarker';\nimport MandatoryFieldsExplanation from 'sonar-ui-common/components/ui/MandatoryFieldsExplanation';\nimport { translate, translateWithParameters } from 'sonar-ui-common/helpers/l10n';\nimport { parseError } from 'sonar-ui-common/helpers/request';\nimport { sendTestEmail } from '../../../api/settings';\nimport { withCurrentUser } from '../../../components/hoc/withCurrentUser';\n\ninterface Props {\n  currentUser: T.LoggedInUser;\n}\n\ninterface State {\n  recipient: string;\n  subject: string;\n  message: string;\n  loading: boolean;\n  success?: string;\n  error?: string;\n}\n\nexport class EmailForm extends React.PureComponent<Props, State> {\n  mounted = false;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      recipient: this.props.currentUser.email || '',\n      subject: translate('email_configuration.test.subject'),\n      message: translate('email_configuration.test.message_text'),\n      loading: false\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleError = (response: Response) => {\n    return parseError(response).then(message => {\n      if (this.mounted) {\n        this.setState({ error: message, loading: false });\n      }\n    });\n  };\n\n  handleFormSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    this.setState({ success: undefined, error: undefined, loading: true });\n    const { recipient, subject, message } = this.state;\n    sendTestEmail(recipient, subject, message).then(() => {\n      if (this.mounted) {\n        this.setState({ success: recipient, loading: false });\n      }\n    }, this.handleError);\n  };\n\n  onRecipientChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ recipient: event.target.value });\n  };\n\n  onSubjectChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ subject: event.target.value });\n  };\n\n  onMessageChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    this.setState({ message: event.target.value });\n  };\n\n  render() {\n    const { error, loading, message, recipient, subject, success } = this.state;\n    return (\n      <div className=\"settings-definition\">\n        <div className=\"settings-definition-left\">\n          <h3 className=\"settings-definition-name\">\n            {translate('email_configuration.test.title')}\n          </h3>\n        </div>\n\n        <form className=\"settings-definition-right\" onSubmit={this.handleFormSubmit}>\n          {success && (\n            <div className=\"form-field\">\n              <Alert variant=\"success\">\n                {translateWithParameters('email_configuration.test.email_was_sent_to_x', success)}\n              </Alert>\n            </div>\n          )}\n\n          {error !== undefined && (\n            <div className=\"form-field\">\n              <Alert variant=\"error\">{error}</Alert>\n            </div>\n          )}\n\n          <MandatoryFieldsExplanation className=\"form-field\" />\n\n          <div className=\"form-field\">\n            <label htmlFor=\"test-email-to\">\n              {translate('email_configuration.test.to_address')}\n              <MandatoryFieldMarker />\n            </label>\n            <input\n              className=\"settings-large-input\"\n              disabled={loading}\n              id=\"test-email-to\"\n              onChange={this.onRecipientChange}\n              required={true}\n              type=\"email\"\n              value={recipient}\n            />\n          </div>\n          <div className=\"form-field\">\n            <label htmlFor=\"test-email-subject\">\n              {translate('email_configuration.test.subject')}\n            </label>\n            <input\n              className=\"settings-large-input\"\n              disabled={loading}\n              id=\"test-email-subject\"\n              onChange={this.onSubjectChange}\n              type=\"text\"\n              value={subject}\n            />\n          </div>\n          <div className=\"form-field\">\n            <label htmlFor=\"test-email-message\">\n              {translate('email_configuration.test.message')}\n              <MandatoryFieldMarker />\n            </label>\n            <textarea\n              className=\"settings-large-input\"\n              disabled={loading}\n              id=\"test-email-message\"\n              onChange={this.onMessageChange}\n              required={true}\n              rows={5}\n              value={message}\n            />\n          </div>\n\n          <SubmitButton disabled={loading}>\n            {translate('email_configuration.test.send')}\n          </SubmitButton>\n          {loading && <DeferredSpinner className=\"spacer-left\" />}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withCurrentUser(EmailForm);\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { groupBy, isEqual, sortBy } from 'lodash';\nimport * as React from 'react';\nimport { sanitizeStringRestricted } from '../../../helpers/sanitize';\nimport { Setting, SettingCategoryDefinition } from '../../../types/settings';\nimport { getSubCategoryDescription, getSubCategoryName } from '../utils';\nimport DefinitionsList from './DefinitionsList';\nimport EmailForm from './EmailForm';\n\ninterface Props {\n  category: string;\n  component?: T.Component;\n  fetchValues: Function;\n  settings: Array<Setting & { definition: SettingCategoryDefinition }>;\n  subCategory?: string;\n}\n\nexport default class SubCategoryDefinitionsList extends React.PureComponent<Props> {\n  componentDidMount() {\n    this.fetchValues();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const prevKeys = prevProps.settings.map(setting => setting.definition.key);\n    const keys = this.props.settings.map(setting => setting.definition.key);\n    if (prevProps.component !== this.props.component || !isEqual(prevKeys, keys)) {\n      this.fetchValues();\n    }\n  }\n\n  fetchValues() {\n    const keys = this.props.settings.map(setting => setting.definition.key).join();\n    this.props.fetchValues(keys, this.props.component && this.props.component.key);\n  }\n\n  renderEmailForm = (subCategoryKey: string) => {\n    const isEmailSettings = this.props.category === 'general' && subCategoryKey === 'email';\n    if (!isEmailSettings) {\n      return null;\n    }\n    return <EmailForm />;\n  };\n\n  render() {\n    const bySubCategory = groupBy(this.props.settings, setting => setting.definition.subCategory);\n    const subCategories = Object.keys(bySubCategory).map(key => ({\n      key,\n      name: getSubCategoryName(bySubCategory[key][0].definition.category, key),\n      description: getSubCategoryDescription(bySubCategory[key][0].definition.category, key)\n    }));\n    const sortedSubCategories = sortBy(subCategories, subCategory =>\n      subCategory.name.toLowerCase()\n    );\n    const filteredSubCategories = this.props.subCategory\n      ? sortedSubCategories.filter(c => c.key === this.props.subCategory)\n      : sortedSubCategories;\n    return (\n      <ul className=\"settings-sub-categories-list\">\n        {filteredSubCategories.map(subCategory => (\n          <li key={subCategory.key}>\n            <h2 className=\"settings-sub-category-name\">{subCategory.name}</h2>\n            {subCategory.description != null && (\n              <div\n                className=\"settings-sub-category-description markdown\"\n                // eslint-disable-next-line react/no-danger\n                dangerouslySetInnerHTML={{\n                  __html: sanitizeStringRestricted(subCategory.description)\n                }}\n              />\n            )}\n            <DefinitionsList\n              component={this.props.component}\n              settings={bySubCategory[subCategory.key]}\n            />\n            {this.renderEmailForm(subCategory.key)}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { connect } from 'react-redux';\nimport { getSettingsAppSettingsForCategory, Store } from '../../../store/rootReducer';\nimport { fetchValues } from '../store/actions';\nimport SubCategoryDefinitionsList from './SubCategoryDefinitionsList';\n\ninterface Props {\n  category: string;\n  component?: T.Component;\n}\n\nconst mapStateToProps = (state: Store, ownProps: Props) => ({\n  settings: getSettingsAppSettingsForCategory(\n    state,\n    ownProps.category,\n    ownProps.component && ownProps.component.key\n  )\n});\n\nconst mapDispatchToProps = { fetchValues };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SubCategoryDefinitionsList);\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { GithubBindingDefinition } from '../../../../types/alm-settings';\nimport { AlmBindingDefinitionFormField } from './AlmBindingDefinitionFormField';\n\nexport interface GithubFormProps {\n  formData: GithubBindingDefinition;\n  onFieldChange: (fieldId: keyof GithubBindingDefinition, value: string) => void;\n}\n\nexport default function GithubForm(props: GithubFormProps) {\n  const { formData, onFieldChange } = props;\n\n  return (\n    <>\n      <AlmBindingDefinitionFormField\n        autoFocus={true}\n        help={translate('settings.almintegration.form.name.github.help')}\n        id=\"name.github\"\n        onFieldChange={onFieldChange}\n        propKey=\"key\"\n        value={formData.key}\n      />\n      <AlmBindingDefinitionFormField\n        help={\n          <>\n            {translate('settings.almintegration.form.url.github.help1')}\n            <br />\n            <em>https://github.company.com/api/v3</em>\n            <br />\n            <br />\n            {translate('settings.almintegration.form.url.github.help2')}\n            <br />\n            <em>https://api.github.com/</em>\n          </>\n        }\n        id=\"url.github\"\n        maxLength={2000}\n        onFieldChange={onFieldChange}\n        propKey=\"url\"\n        value={formData.url}\n      />\n      <AlmBindingDefinitionFormField\n        id=\"app_id\"\n        maxLength={80}\n        onFieldChange={onFieldChange}\n        propKey=\"appId\"\n        value={formData.appId}\n      />\n      <AlmBindingDefinitionFormField\n        id=\"client_id.github\"\n        maxLength={80}\n        onFieldChange={onFieldChange}\n        propKey=\"clientId\"\n        value={formData.clientId}\n      />\n      <AlmBindingDefinitionFormField\n        id=\"client_secret.github\"\n        maxLength={80}\n        onFieldChange={onFieldChange}\n        overwriteOnly={Boolean(formData.key)}\n        propKey=\"clientSecret\"\n        value={formData.clientSecret}\n      />\n      <AlmBindingDefinitionFormField\n        id=\"private_key\"\n        isTextArea={true}\n        onFieldChange={onFieldChange}\n        overwriteOnly={Boolean(formData.key)}\n        propKey=\"privateKey\"\n        value={formData.privateKey}\n      />\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { createGithubConfiguration, updateGithubConfiguration } from '../../../../api/alm-settings';\nimport { ALM_DOCUMENTATION_PATHS } from '../../../../helpers/constants';\nimport {\n  AlmKeys,\n  AlmSettingsBindingStatus,\n  GithubBindingDefinition\n} from '../../../../types/alm-settings';\nimport { ALM_INTEGRATION } from '../AdditionalCategoryKeys';\nimport CategoryDefinitionsList from '../CategoryDefinitionsList';\nimport AlmTab from './AlmTab';\nimport GithubForm from './GithubForm';\n\nexport interface GithubTabProps {\n  branchesEnabled: boolean;\n  component?: T.Component;\n  definitions: GithubBindingDefinition[];\n  definitionStatus: T.Dict<AlmSettingsBindingStatus>;\n  loadingAlmDefinitions: boolean;\n  loadingProjectCount: boolean;\n  multipleAlmEnabled: boolean;\n  onCheck: (definitionKey: string) => void;\n  onDelete: (definitionKey: string) => void;\n  onUpdateDefinitions: () => void;\n}\n\nexport default function GithubTab(props: GithubTabProps) {\n  const {\n    branchesEnabled,\n    component,\n    multipleAlmEnabled,\n    definitions,\n    definitionStatus,\n    loadingAlmDefinitions,\n    loadingProjectCount\n  } = props;\n\n  return (\n    <div className=\"bordered\">\n      <AlmTab\n        alm={AlmKeys.GitHub}\n        branchesEnabled={branchesEnabled}\n        createConfiguration={createGithubConfiguration}\n        defaultBinding={{\n          key: '',\n          appId: '',\n          clientId: '',\n          clientSecret: '',\n          url: '',\n          privateKey: ''\n        }}\n        definitions={definitions}\n        definitionStatus={definitionStatus}\n        form={childProps => <GithubForm {...childProps} />}\n        help={\n          <FormattedMessage\n            defaultMessage={translate(`settings.almintegration.github.info`)}\n            id=\"settings.almintegration.github.info\"\n            values={{\n              link: (\n                <Link target=\"_blank\" to={ALM_DOCUMENTATION_PATHS[AlmKeys.GitHub]}>\n                  {translate('learn_more')}\n                </Link>\n              )\n            }}\n          />\n        }\n        loadingAlmDefinitions={loadingAlmDefinitions}\n        loadingProjectCount={loadingProjectCount}\n        multipleAlmEnabled={multipleAlmEnabled}\n        onCheck={props.onCheck}\n        onDelete={props.onDelete}\n        onUpdateDefinitions={props.onUpdateDefinitions}\n        updateConfiguration={updateGithubConfiguration}\n      />\n\n      <div className=\"huge-spacer-top huge-spacer-bottom bordered-top\" />\n\n      <div className=\"big-padded\">\n        <CategoryDefinitionsList\n          category={ALM_INTEGRATION}\n          component={component}\n          subCategory={AlmKeys.GitHub}\n        />\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { GitlabBindingDefinition } from '../../../../types/alm-settings';\nimport { AlmBindingDefinitionFormField } from './AlmBindingDefinitionFormField';\n\nexport interface GitlabFormProps {\n  formData: GitlabBindingDefinition;\n  onFieldChange: (fieldId: keyof GitlabBindingDefinition, value: string) => void;\n}\n\nexport default function GitlabForm(props: GitlabFormProps) {\n  const { formData, onFieldChange } = props;\n\n  return (\n    <>\n      <AlmBindingDefinitionFormField\n        autoFocus={true}\n        help={translate('settings.almintegration.form.name.gitlab.help')}\n        id=\"name.gitlab\"\n        onFieldChange={onFieldChange}\n        propKey=\"key\"\n        value={formData.key}\n      />\n      <AlmBindingDefinitionFormField\n        help={\n          <>\n            {translate('settings.almintegration.form.url.gitlab.help')}\n            <br />\n            <em>https://gitlab.com/api/v4</em>\n          </>\n        }\n        id=\"url.gitlab\"\n        maxLength={2000}\n        onFieldChange={onFieldChange}\n        propKey=\"url\"\n        value={formData.url || ''}\n      />\n      <AlmBindingDefinitionFormField\n        help={translate('settings.almintegration.form.personal_access_token.gitlab.help')}\n        id=\"personal_access_token\"\n        isTextArea={true}\n        onFieldChange={onFieldChange}\n        overwriteOnly={Boolean(formData.key)}\n        propKey=\"personalAccessToken\"\n        value={formData.personalAccessToken}\n      />\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { createGitlabConfiguration, updateGitlabConfiguration } from '../../../../api/alm-settings';\nimport { ALM_DOCUMENTATION_PATHS } from '../../../../helpers/constants';\nimport {\n  AlmKeys,\n  AlmSettingsBindingStatus,\n  GitlabBindingDefinition\n} from '../../../../types/alm-settings';\nimport { ALM_INTEGRATION } from '../AdditionalCategoryKeys';\nimport CategoryDefinitionsList from '../CategoryDefinitionsList';\nimport AlmTab from './AlmTab';\nimport GitlabForm from './GitlabForm';\n\nexport interface GitlabTabProps {\n  branchesEnabled: boolean;\n  component?: T.Component;\n  definitions: GitlabBindingDefinition[];\n  definitionStatus: T.Dict<AlmSettingsBindingStatus>;\n  loadingAlmDefinitions: boolean;\n  loadingProjectCount: boolean;\n  multipleAlmEnabled: boolean;\n  onCheck: (definitionKey: string) => void;\n  onDelete: (definitionKey: string) => void;\n  onUpdateDefinitions: () => void;\n}\n\nexport default function GitlabTab(props: GitlabTabProps) {\n  const {\n    branchesEnabled,\n    component,\n    multipleAlmEnabled,\n    definitions,\n    definitionStatus,\n    loadingAlmDefinitions,\n    loadingProjectCount\n  } = props;\n\n  return (\n    <div className=\"bordered\">\n      <AlmTab\n        alm={AlmKeys.GitLab}\n        branchesEnabled={branchesEnabled}\n        createConfiguration={createGitlabConfiguration}\n        defaultBinding={{ key: '', personalAccessToken: '', url: '' }}\n        definitions={definitions}\n        definitionStatus={definitionStatus}\n        form={childProps => <GitlabForm {...childProps} />}\n        help={\n          <FormattedMessage\n            defaultMessage={translate(`settings.almintegration.gitlab.info`)}\n            id=\"settings.almintegration.gitlab.info\"\n            values={{\n              link: (\n                <Link target=\"_blank\" to={ALM_DOCUMENTATION_PATHS[AlmKeys.GitLab]}>\n                  {translate('learn_more')}\n                </Link>\n              )\n            }}\n          />\n        }\n        loadingAlmDefinitions={loadingAlmDefinitions}\n        loadingProjectCount={loadingProjectCount}\n        multipleAlmEnabled={multipleAlmEnabled}\n        onCheck={props.onCheck}\n        onDelete={props.onDelete}\n        onUpdateDefinitions={props.onUpdateDefinitions}\n        updateConfiguration={updateGitlabConfiguration}\n      />\n\n      <div className=\"huge-spacer-top huge-spacer-bottom bordered-top\" />\n\n      <div className=\"big-padded\">\n        <CategoryDefinitionsList\n          category={ALM_INTEGRATION}\n          component={component}\n          subCategory={AlmKeys.GitLab}\n        />\n      </div>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport BoxedTabs from 'sonar-ui-common/components/controls/BoxedTabs';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getBaseUrl } from 'sonar-ui-common/helpers/urls';\nimport {\n  AlmKeys,\n  AlmSettingsBindingDefinitions,\n  AlmSettingsBindingStatus\n} from '../../../../types/alm-settings';\nimport AzureTab from './AzureTab';\nimport BitbucketTab from './BitbucketTab';\nimport DeleteModal from './DeleteModal';\nimport GithubTab from './GithubTab';\nimport GitlabTab from './GitlabTab';\n\nexport interface AlmIntegrationRendererProps {\n  branchesEnabled: boolean;\n  component?: T.Component;\n  currentAlm: AlmKeys;\n  definitionKeyForDeletion?: string;\n  definitions: AlmSettingsBindingDefinitions;\n  definitionStatus: T.Dict<AlmSettingsBindingStatus>;\n  loadingAlmDefinitions: boolean;\n  loadingProjectCount: boolean;\n  multipleAlmEnabled: boolean;\n  onCancel: () => void;\n  onCheck: (definitionKey: string) => void;\n  onConfirmDelete: (definitionKey: string) => void;\n  onDelete: (definitionKey: string) => void;\n  onSelectAlm: (alm: AlmKeys) => void;\n  onUpdateDefinitions: () => void;\n  projectCount?: number;\n}\n\nconst tabs = [\n  {\n    key: AlmKeys.GitHub,\n    label: (\n      <>\n        <img\n          alt=\"github\"\n          className=\"spacer-right\"\n          height={16}\n          src={`${getBaseUrl()}/images/alm/github.svg`}\n        />\n        GitHub\n      </>\n    ),\n    requiresBranchesEnabled: false\n  },\n  {\n    key: AlmKeys.BitbucketServer,\n    label: (\n      <>\n        <img\n          alt=\"bitbucket\"\n          className=\"spacer-right\"\n          height={16}\n          src={`${getBaseUrl()}/images/alm/bitbucket.svg`}\n        />\n        Bitbucket\n      </>\n    ),\n    requiresBranchesEnabled: false\n  },\n  {\n    key: AlmKeys.Azure,\n    label: (\n      <>\n        <img\n          alt=\"azure\"\n          className=\"spacer-right\"\n          height={16}\n          src={`${getBaseUrl()}/images/alm/azure.svg`}\n        />\n        Azure DevOps\n      </>\n    ),\n    requiresBranchesEnabled: false\n  },\n  {\n    key: AlmKeys.GitLab,\n    label: (\n      <>\n        <img\n          alt=\"gitlab\"\n          className=\"spacer-right\"\n          height={16}\n          src={`${getBaseUrl()}/images/alm/gitlab.svg`}\n        />\n        GitLab\n      </>\n    ),\n    requiresBranchesEnabled: false\n  }\n];\n\nexport default function AlmIntegrationRenderer(props: AlmIntegrationRendererProps) {\n  const {\n    component,\n    definitionKeyForDeletion,\n    definitions,\n    definitionStatus,\n    currentAlm,\n    loadingAlmDefinitions,\n    loadingProjectCount,\n    branchesEnabled,\n    multipleAlmEnabled,\n    projectCount\n  } = props;\n\n  return (\n    <>\n      <header className=\"page-header\">\n        <h1 className=\"page-title\">{translate('settings.almintegration.title')}</h1>\n      </header>\n\n      <div className=\"markdown small spacer-top big-spacer-bottom\">\n        {translate('settings.almintegration.description')}\n      </div>\n      <BoxedTabs\n        onSelect={props.onSelectAlm}\n        selected={currentAlm}\n        tabs={tabs.filter(tab => !(tab.requiresBranchesEnabled && !branchesEnabled))}\n      />\n\n      {currentAlm === AlmKeys.Azure && (\n        <AzureTab\n          branchesEnabled={branchesEnabled}\n          definitions={definitions.azure}\n          definitionStatus={definitionStatus}\n          loadingAlmDefinitions={loadingAlmDefinitions}\n          loadingProjectCount={loadingProjectCount}\n          multipleAlmEnabled={multipleAlmEnabled}\n          onCheck={props.onCheck}\n          onDelete={props.onDelete}\n          onUpdateDefinitions={props.onUpdateDefinitions}\n        />\n      )}\n      {currentAlm === AlmKeys.BitbucketServer && (\n        <BitbucketTab\n          branchesEnabled={branchesEnabled}\n          definitions={[...definitions.bitbucket, ...definitions.bitbucketcloud]}\n          definitionStatus={definitionStatus}\n          loadingAlmDefinitions={loadingAlmDefinitions}\n          loadingProjectCount={loadingProjectCount}\n          multipleAlmEnabled={multipleAlmEnabled}\n          onCheck={props.onCheck}\n          onDelete={props.onDelete}\n          onUpdateDefinitions={props.onUpdateDefinitions}\n        />\n      )}\n      {currentAlm === AlmKeys.GitHub && (\n        <GithubTab\n          branchesEnabled={branchesEnabled}\n          component={component}\n          definitions={definitions.github}\n          definitionStatus={definitionStatus}\n          loadingAlmDefinitions={loadingAlmDefinitions}\n          loadingProjectCount={loadingProjectCount}\n          multipleAlmEnabled={multipleAlmEnabled}\n          onCheck={props.onCheck}\n          onDelete={props.onDelete}\n          onUpdateDefinitions={props.onUpdateDefinitions}\n        />\n      )}\n      {currentAlm === AlmKeys.GitLab && (\n        <GitlabTab\n          branchesEnabled={branchesEnabled}\n          definitions={definitions.gitlab}\n          definitionStatus={definitionStatus}\n          loadingAlmDefinitions={loadingAlmDefinitions}\n          loadingProjectCount={loadingProjectCount}\n          multipleAlmEnabled={multipleAlmEnabled}\n          onCheck={props.onCheck}\n          onDelete={props.onDelete}\n          onUpdateDefinitions={props.onUpdateDefinitions}\n        />\n      )}\n\n      {definitionKeyForDeletion && (\n        <DeleteModal\n          id={definitionKeyForDeletion}\n          onCancel={props.onCancel}\n          onDelete={props.onConfirmDelete}\n          projectCount={projectCount}\n        />\n      )}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { AlmKeys } from '../../../../types/alm-settings';\n\nexport const ALM_KEY_LIST = [\n  AlmKeys.Azure,\n  AlmKeys.BitbucketServer,\n  AlmKeys.BitbucketCloud,\n  AlmKeys.GitHub,\n  AlmKeys.GitLab\n];\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { WithRouterProps } from 'react-router';\nimport {\n  countBindedProjects,\n  deleteConfiguration,\n  getAlmDefinitions,\n  validateAlmSettings\n} from '../../../../api/alm-settings';\nimport { withAppState } from '../../../../components/hoc/withAppState';\nimport { withRouter } from '../../../../components/hoc/withRouter';\nimport {\n  AlmBindingDefinition,\n  AlmKeys,\n  AlmSettingsBindingDefinitions,\n  AlmSettingsBindingStatus,\n  AlmSettingsBindingStatusType\n} from '../../../../types/alm-settings';\nimport AlmIntegrationRenderer from './AlmIntegrationRenderer';\nimport { ALM_KEY_LIST } from './utils';\n\ninterface Props extends Pick<WithRouterProps, 'location'> {\n  appState: Pick<T.AppState, 'branchesEnabled' | 'multipleAlmEnabled'>;\n  component?: T.Component;\n}\n\ninterface State {\n  currentAlm: AlmKeys;\n  definitionKeyForDeletion?: string;\n  definitions: AlmSettingsBindingDefinitions;\n  definitionStatus: T.Dict<AlmSettingsBindingStatus>;\n  loadingAlmDefinitions: boolean;\n  loadingProjectCount: boolean;\n  projectCount?: number;\n}\n\nexport class AlmIntegration extends React.PureComponent<Props, State> {\n  mounted = false;\n  state: State;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      currentAlm: props.location.query.alm || AlmKeys.GitHub,\n      definitions: {\n        [AlmKeys.Azure]: [],\n        [AlmKeys.BitbucketServer]: [],\n        [AlmKeys.BitbucketCloud]: [],\n        [AlmKeys.GitHub]: [],\n        [AlmKeys.GitLab]: []\n      },\n      definitionStatus: {},\n      loadingAlmDefinitions: true,\n      loadingProjectCount: false\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    return this.fetchPullRequestDecorationSetting().then(definitions => {\n      if (definitions) {\n        // Validate all alms on load:\n        ALM_KEY_LIST.forEach(alm => {\n          this.state.definitions[alm].forEach((def: AlmBindingDefinition) =>\n            this.handleCheck(def.key, false)\n          );\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  deleteConfiguration = (definitionKey: string) => {\n    return deleteConfiguration(definitionKey)\n      .then(() => {\n        if (this.mounted) {\n          this.setState({ definitionKeyForDeletion: undefined, projectCount: undefined });\n        }\n      })\n      .then(this.fetchPullRequestDecorationSetting);\n  };\n\n  fetchPullRequestDecorationSetting = () => {\n    this.setState({ loadingAlmDefinitions: true });\n    return getAlmDefinitions()\n      .then(definitions => {\n        if (this.mounted) {\n          this.setState({\n            definitions,\n            loadingAlmDefinitions: false\n          });\n          return definitions;\n        }\n        return undefined;\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ loadingAlmDefinitions: false });\n        }\n      });\n  };\n\n  handleSelectAlm = (currentAlm: AlmKeys) => {\n    this.setState({ currentAlm });\n  };\n\n  handleCancel = () => {\n    this.setState({ definitionKeyForDeletion: undefined, projectCount: undefined });\n  };\n\n  handleDelete = (definitionKey: string) => {\n    this.setState({ loadingProjectCount: true });\n    return countBindedProjects(definitionKey)\n      .then(projectCount => {\n        if (this.mounted) {\n          this.setState({\n            definitionKeyForDeletion: definitionKey,\n            loadingProjectCount: false,\n            projectCount\n          });\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ loadingProjectCount: false });\n        }\n      });\n  };\n\n  handleCheck = async (definitionKey: string, alertSuccess = true) => {\n    this.setState(({ definitionStatus }) => {\n      definitionStatus[definitionKey] = {\n        ...definitionStatus[definitionKey],\n        type: AlmSettingsBindingStatusType.Validating\n      };\n\n      return { definitionStatus: { ...definitionStatus } };\n    });\n\n    let type: AlmSettingsBindingStatusType;\n    let failureMessage = '';\n\n    try {\n      failureMessage = await validateAlmSettings(definitionKey);\n      type = failureMessage\n        ? AlmSettingsBindingStatusType.Failure\n        : AlmSettingsBindingStatusType.Success;\n    } catch (_) {\n      type = AlmSettingsBindingStatusType.Warning;\n    }\n\n    if (this.mounted) {\n      this.setState(({ definitionStatus }) => {\n        definitionStatus[definitionKey] = {\n          alertSuccess,\n          failureMessage,\n          type\n        };\n\n        return { definitionStatus: { ...definitionStatus } };\n      });\n    }\n  };\n\n  render() {\n    const {\n      appState: { branchesEnabled, multipleAlmEnabled },\n      component\n    } = this.props;\n    return (\n      <AlmIntegrationRenderer\n        branchesEnabled={Boolean(branchesEnabled)}\n        component={component}\n        multipleAlmEnabled={Boolean(multipleAlmEnabled)}\n        onCancel={this.handleCancel}\n        onConfirmDelete={this.deleteConfiguration}\n        onCheck={this.handleCheck}\n        onDelete={this.handleDelete}\n        onSelectAlm={this.handleSelectAlm}\n        onUpdateDefinitions={this.fetchPullRequestDecorationSetting}\n        {...this.state}\n      />\n    );\n  }\n}\n\nexport default withRouter(withAppState(AlmIntegration));\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { Link } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { AdditionalCategoryComponentProps } from './AdditionalCategories';\nimport CategoryDefinitionsList from './CategoryDefinitionsList';\n\nexport function AnalysisScope(props: AdditionalCategoryComponentProps) {\n  const { component, selectedCategory } = props;\n\n  return (\n    <>\n      <p className=\"spacer-bottom\">\n        {translate('settings.analysis_scope.wildcards.introduction')}\n        <Link\n          className=\"spacer-left\"\n          to=\"/documentation/project-administration/narrowing-the-focus/\">\n          {translate('learn_more')}\n        </Link>\n      </p>\n\n      <table className=\"data spacer-bottom\">\n        <tbody>\n          <tr>\n            <td>*</td>\n            <td>{translate('settings.analysis_scope.wildcards.zero_more_char')}</td>\n          </tr>\n          <tr>\n            <td>**</td>\n            <td>{translate('settings.analysis_scope.wildcards.zero_more_dir')}</td>\n          </tr>\n          <tr>\n            <td>?</td>\n            <td>{translate('settings.analysis_scope.wildcards.single_char')}</td>\n          </tr>\n        </tbody>\n      </table>\n\n      <div className=\"settings-sub-category\">\n        <CategoryDefinitionsList category={selectedCategory} component={component} />\n      </div>\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { LANGUAGES_CATEGORY } from './AdditionalCategoryKeys';\n\nconst CATEGORY_OVERRIDES: T.Dict<string> = {\n  abap: LANGUAGES_CATEGORY,\n  apex: LANGUAGES_CATEGORY,\n  'c / c++ / objective-c': LANGUAGES_CATEGORY,\n  'c#': LANGUAGES_CATEGORY,\n  cobol: LANGUAGES_CATEGORY,\n  css: LANGUAGES_CATEGORY,\n  flex: LANGUAGES_CATEGORY,\n  go: LANGUAGES_CATEGORY,\n  html: LANGUAGES_CATEGORY,\n  java: LANGUAGES_CATEGORY,\n  javascript: LANGUAGES_CATEGORY,\n  'javascript / typescript': LANGUAGES_CATEGORY,\n  kotlin: LANGUAGES_CATEGORY,\n  php: LANGUAGES_CATEGORY,\n  'pl/i': LANGUAGES_CATEGORY,\n  'pl/sql': LANGUAGES_CATEGORY,\n  python: LANGUAGES_CATEGORY,\n  rpg: LANGUAGES_CATEGORY,\n  ruby: LANGUAGES_CATEGORY,\n  scala: LANGUAGES_CATEGORY,\n  swift: LANGUAGES_CATEGORY,\n  't-sql': LANGUAGES_CATEGORY,\n  typescript: LANGUAGES_CATEGORY,\n  'vb.net': LANGUAGES_CATEGORY,\n  'visual basic': LANGUAGES_CATEGORY,\n  xml: LANGUAGES_CATEGORY\n};\n\nexport default CATEGORY_OVERRIDES;\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { Location, Router, withRouter } from '../../../components/hoc/withRouter';\nimport { getSettingsAppAllCategories, Store } from '../../../store/rootReducer';\nimport { getCategoryName } from '../utils';\nimport { AdditionalCategoryComponentProps } from './AdditionalCategories';\nimport { LANGUAGES_CATEGORY } from './AdditionalCategoryKeys';\nimport CategoryDefinitionsList from './CategoryDefinitionsList';\nimport CATEGORY_OVERRIDES from './CategoryOverrides';\n\nexport interface LanguagesProps extends AdditionalCategoryComponentProps {\n  categories: string[];\n  location: Location;\n  router: Router;\n}\n\ninterface SelectOption {\n  label: string;\n  originalValue: string;\n  value: string;\n}\n\nexport function Languages(props: LanguagesProps) {\n  const { categories, component, location, router, selectedCategory } = props;\n  const { availableLanguages, selectedLanguage } = getLanguages(categories, selectedCategory);\n\n  const handleOnChange = (newOption: SelectOption) => {\n    router.push({\n      ...location,\n      query: { ...location.query, category: newOption.originalValue }\n    });\n  };\n\n  return (\n    <>\n      <h2 className=\"settings-sub-category-name\">{translate('property.category.languages')}</h2>\n      <div data-test=\"language-select\">\n        <Select\n          className=\"input-large\"\n          onChange={handleOnChange}\n          options={availableLanguages}\n          placeholder={translate('settings.languages.select_a_language_placeholder')}\n          value={selectedLanguage}\n        />\n      </div>\n      {selectedLanguage && (\n        <div className=\"settings-sub-category\">\n          <CategoryDefinitionsList category={selectedLanguage} component={component} />\n        </div>\n      )}\n    </>\n  );\n}\n\nfunction getLanguages(categories: string[], selectedCategory: string) {\n  const lowerCasedLanguagesCategory = LANGUAGES_CATEGORY.toLowerCase();\n  const lowerCasedSelectedCategory = selectedCategory.toLowerCase();\n\n  const availableLanguages = categories\n    .filter(c => CATEGORY_OVERRIDES[c.toLowerCase()] === lowerCasedLanguagesCategory)\n    .map(c => ({\n      label: getCategoryName(c),\n      value: c.toLowerCase(),\n      originalValue: c\n    }));\n\n  let selectedLanguage = undefined;\n\n  if (\n    lowerCasedSelectedCategory !== lowerCasedLanguagesCategory &&\n    availableLanguages.find(c => c.value === lowerCasedSelectedCategory)\n  ) {\n    selectedLanguage = lowerCasedSelectedCategory;\n  }\n\n  return {\n    availableLanguages,\n    selectedLanguage\n  };\n}\n\nexport default withRouter(\n  connect((state: Store) => ({\n    categories: getSettingsAppAllCategories(state)\n  }))(Languages)\n);\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { ResetButtonLink, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport AlertSuccessIcon from 'sonar-ui-common/components/icons/AlertSuccessIcon';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { getNewCodePeriod, setNewCodePeriod } from '../../../api/newCodePeriod';\nimport BaselineSettingDays from '../../projectBaseline/components/BaselineSettingDays';\nimport BaselineSettingPreviousVersion from '../../projectBaseline/components/BaselineSettingPreviousVersion';\nimport { validateDays } from '../../projectBaseline/utils';\n\ninterface State {\n  currentSetting?: T.NewCodePeriodSettingType;\n  days: string;\n  loading: boolean;\n  currentSettingValue?: string | number;\n  saving: boolean;\n  selected?: T.NewCodePeriodSettingType;\n  success: boolean;\n}\n\nconst DEFAULT_SETTING = 'PREVIOUS_VERSION';\n\nexport default class NewCodePeriod extends React.PureComponent<{}, State> {\n  mounted = false;\n  state: State = {\n    loading: true,\n    days: '30',\n    saving: false,\n    success: false\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchNewCodePeriodSetting();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchNewCodePeriodSetting() {\n    getNewCodePeriod()\n      .then(({ type, value }) => {\n        const currentSetting = type || DEFAULT_SETTING;\n\n        this.setState(({ days }) => ({\n          currentSetting,\n          days: currentSetting === 'NUMBER_OF_DAYS' ? String(value) : days,\n          loading: false,\n          currentSettingValue: value,\n          selected: currentSetting\n        }));\n      })\n      .catch(() => {\n        this.setState({ loading: false });\n      });\n  }\n\n  onSelectDays = (days: string) => {\n    this.setState({ days, success: false });\n  };\n\n  onSelectSetting = (selected: T.NewCodePeriodSettingType) => {\n    this.setState({ selected, success: false });\n  };\n\n  onCancel = () => {\n    this.setState(({ currentSetting, currentSettingValue, days }) => ({\n      selected: currentSetting,\n      days: currentSetting === 'NUMBER_OF_DAYS' ? String(currentSettingValue) : days\n    }));\n  };\n\n  onSubmit = (e: React.SyntheticEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const { days, selected } = this.state;\n\n    const type = selected;\n    const value = type === 'NUMBER_OF_DAYS' ? days : undefined;\n\n    if (type) {\n      this.setState({ saving: true, success: false });\n      setNewCodePeriod({\n        type,\n        value\n      }).then(\n        () => {\n          this.setState({\n            saving: false,\n            currentSetting: type,\n            currentSettingValue: value || undefined,\n            success: true\n          });\n        },\n        () => {\n          this.setState({\n            saving: false\n          });\n        }\n      );\n    }\n  };\n\n  render() {\n    const {\n      currentSetting,\n      days,\n      loading,\n      currentSettingValue,\n      saving,\n      selected,\n      success\n    } = this.state;\n\n    const isChanged =\n      selected !== currentSetting ||\n      (selected === 'NUMBER_OF_DAYS' && String(days) !== currentSettingValue);\n\n    const isValid = selected !== 'NUMBER_OF_DAYS' || validateDays(days);\n\n    return (\n      <ul className=\"settings-sub-categories-list\">\n        <li>\n          <ul className=\"settings-definitions-list\">\n            <li>\n              <div className=\"settings-definition\">\n                <div className=\"settings-definition-left\">\n                  <h3\n                    className=\"settings-definition-name\"\n                    title={translate('settings.new_code_period.title')}>\n                    {translate('settings.new_code_period.title')}\n                  </h3>\n\n                  <div className=\"small big-spacer-top\">\n                    <FormattedMessage\n                      defaultMessage={translate('settings.new_code_period.description')}\n                      id=\"settings.new_code_period.description\"\n                      values={{\n                        link: (\n                          <Link to=\"/documentation/project-administration/new-code-period/\">\n                            {translate('learn_more')}\n                          </Link>\n                        )\n                      }}\n                    />\n                    <p className=\"spacer-top\">\n                      {translate('settings.new_code_period.description2')}\n                    </p>\n                  </div>\n                </div>\n\n                <div className=\"settings-definition-right\">\n                  {loading ? (\n                    <DeferredSpinner />\n                  ) : (\n                    <form onSubmit={this.onSubmit}>\n                      <BaselineSettingPreviousVersion\n                        isDefault={true}\n                        onSelect={this.onSelectSetting}\n                        selected={selected === 'PREVIOUS_VERSION'}\n                      />\n                      <BaselineSettingDays\n                        className=\"spacer-top\"\n                        days={days}\n                        isChanged={isChanged}\n                        isValid={isValid}\n                        onChangeDays={this.onSelectDays}\n                        onSelect={this.onSelectSetting}\n                        selected={selected === 'NUMBER_OF_DAYS'}\n                      />\n                      {isChanged && (\n                        <div className=\"big-spacer-top\">\n                          <p className=\"spacer-bottom\">\n                            {translate('baseline.next_analysis_notice')}\n                          </p>\n                          <DeferredSpinner className=\"spacer-right\" loading={saving} />\n                          <SubmitButton disabled={saving || !isValid}>\n                            {translate('save')}\n                          </SubmitButton>\n                          <ResetButtonLink className=\"spacer-left\" onClick={this.onCancel}>\n                            {translate('cancel')}\n                          </ResetButtonLink>\n                        </div>\n                      )}\n                      {!saving && !loading && success && (\n                        <div className=\"big-spacer-top\">\n                          <span className=\"text-success\">\n                            <AlertSuccessIcon className=\"spacer-right\" />\n                            {translate('settings.state.saved')}\n                          </span>\n                        </div>\n                      )}\n                    </form>\n                  )}\n                </div>\n              </div>\n            </li>\n          </ul>\n        </li>\n      </ul>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport HelpTooltip from 'sonar-ui-common/components/controls/HelpTooltip';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport MandatoryFieldMarker from 'sonar-ui-common/components/ui/MandatoryFieldMarker';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { ALM_DOCUMENTATION_PATHS } from '../../../../helpers/constants';\nimport { AlmKeys, ProjectAlmBindingResponse } from '../../../../types/alm-settings';\nimport InputForBoolean from '../inputs/InputForBoolean';\n\nexport interface AlmSpecificFormProps {\n  alm: AlmKeys;\n  formData: T.Omit<ProjectAlmBindingResponse, 'alm'>;\n  onFieldChange: (id: keyof ProjectAlmBindingResponse, value: string | boolean) => void;\n  monorepoEnabled: boolean;\n}\n\ninterface LabelProps {\n  help?: boolean;\n  helpParams?: T.Dict<string | JSX.Element>;\n  id: string;\n  optional?: boolean;\n}\n\ninterface CommonFieldProps extends LabelProps {\n  onFieldChange: (id: keyof ProjectAlmBindingResponse, value: string | boolean) => void;\n  propKey: keyof ProjectAlmBindingResponse;\n}\n\nfunction renderLabel(props: LabelProps) {\n  const { help, helpParams, optional, id } = props;\n  return (\n    <label className=\"display-flex-center\" htmlFor={id}>\n      {translate('settings.pr_decoration.binding.form', id)}\n      {!optional && <MandatoryFieldMarker />}\n      {help && (\n        <HelpTooltip\n          className=\"spacer-left\"\n          overlay={\n            <FormattedMessage\n              defaultMessage={translate('settings.pr_decoration.binding.form', id, 'help')}\n              id={`settings.pr_decoration.binding.form.${id}.help`}\n              values={helpParams}\n            />\n          }\n          placement=\"right\"\n        />\n      )}\n    </label>\n  );\n}\n\nfunction renderBooleanField(\n  props: Omit<CommonFieldProps, 'optional'> & {\n    value: boolean;\n    inputExtra?: React.ReactNode;\n  }\n) {\n  const { id, value, onFieldChange, propKey, inputExtra } = props;\n  return (\n    <div className=\"form-field\">\n      {renderLabel({ ...props, optional: true })}\n      <div className=\"display-flex-center\">\n        <InputForBoolean\n          isDefault={true}\n          name={id}\n          onChange={v => onFieldChange(propKey, v)}\n          value={value}\n        />\n        {inputExtra}\n      </div>\n    </div>\n  );\n}\n\nfunction renderField(\n  props: CommonFieldProps & {\n    value: string;\n  }\n) {\n  const { id, propKey, value, onFieldChange } = props;\n  return (\n    <div className=\"form-field\">\n      {renderLabel(props)}\n      <input\n        className=\"input-super-large\"\n        id={id}\n        maxLength={256}\n        name={id}\n        onChange={e => onFieldChange(propKey, e.currentTarget.value)}\n        type=\"text\"\n        value={value}\n      />\n    </div>\n  );\n}\n\nexport default function AlmSpecificForm(props: AlmSpecificFormProps) {\n  const {\n    alm,\n    formData: { repository, slug, summaryCommentEnabled, monorepo },\n    monorepoEnabled\n  } = props;\n\n  let formFields: JSX.Element;\n\n  switch (alm) {\n    case AlmKeys.Azure:\n      formFields = (\n        <>\n          {renderField({\n            help: true,\n            id: 'azure.project',\n            onFieldChange: props.onFieldChange,\n            propKey: 'slug',\n            value: slug || ''\n          })}\n          {renderField({\n            help: true,\n            id: 'azure.repository',\n            onFieldChange: props.onFieldChange,\n            propKey: 'repository',\n            value: repository || ''\n          })}\n        </>\n      );\n      break;\n    case AlmKeys.BitbucketServer:\n      formFields = (\n        <>\n          {renderField({\n            help: true,\n            helpParams: {\n              example: (\n                <>\n                  {'.../projects/'}\n                  <strong>{'{KEY}'}</strong>\n                  {'/repos/{SLUG}/browse'}\n                </>\n              )\n            },\n            id: 'bitbucket.repository',\n            onFieldChange: props.onFieldChange,\n            propKey: 'repository',\n            value: repository || ''\n          })}\n          {renderField({\n            help: true,\n            helpParams: {\n              example: (\n                <>\n                  {'.../projects/{KEY}/repos/'}\n                  <strong>{'{SLUG}'}</strong>\n                  {'/browse'}\n                </>\n              )\n            },\n            id: 'bitbucket.slug',\n            onFieldChange: props.onFieldChange,\n            propKey: 'slug',\n            value: slug || ''\n          })}\n        </>\n      );\n      break;\n    case AlmKeys.BitbucketCloud:\n      formFields = (\n        <>\n          {renderField({\n            help: true,\n            helpParams: {\n              example: (\n                <>\n                  {'https://bitbucket.org/{workspace}/'}\n                  <strong>{'{repository}'}</strong>\n                </>\n              )\n            },\n            id: 'bitbucketcloud.repository',\n            onFieldChange: props.onFieldChange,\n            propKey: 'repository',\n            value: repository || ''\n          })}\n        </>\n      );\n      break;\n    case AlmKeys.GitHub:\n      formFields = (\n        <>\n          {renderField({\n            help: true,\n            helpParams: { example: 'SonarSource/sonarqube' },\n            id: 'github.repository',\n            onFieldChange: props.onFieldChange,\n            propKey: 'repository',\n            value: repository || ''\n          })}\n          {renderBooleanField({\n            help: true,\n            id: 'github.summary_comment_setting',\n            onFieldChange: props.onFieldChange,\n            propKey: 'summaryCommentEnabled',\n            value: summaryCommentEnabled === undefined ? true : summaryCommentEnabled\n          })}\n        </>\n      );\n      break;\n    case AlmKeys.GitLab:\n      formFields = (\n        <>\n          {renderField({\n            id: 'gitlab.repository',\n            onFieldChange: props.onFieldChange,\n            propKey: 'repository',\n            value: repository || ''\n          })}\n        </>\n      );\n      break;\n  }\n\n  return (\n    <>\n      {formFields}\n      {monorepoEnabled &&\n        renderBooleanField({\n          help: true,\n          helpParams: {\n            doc_link: (\n              <Link to={ALM_DOCUMENTATION_PATHS[alm]} target=\"_blank\">\n                {translate('learn_more')}\n              </Link>\n            )\n          },\n          id: 'monorepo',\n          onFieldChange: props.onFieldChange,\n          propKey: 'monorepo',\n          value: monorepo,\n          inputExtra: monorepo && (\n            <Alert className=\"no-margin-bottom spacer-left\" variant=\"warning\" display=\"inline\">\n              {translate('settings.pr_decoration.binding.form.monorepo.warning')}\n            </Alert>\n          )\n        })}\n    </>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router';\nimport { Button, SubmitButton } from 'sonar-ui-common/components/controls/buttons';\nimport Select from 'sonar-ui-common/components/controls/Select';\nimport AlertSuccessIcon from 'sonar-ui-common/components/icons/AlertSuccessIcon';\nimport { Alert } from 'sonar-ui-common/components/ui/Alert';\nimport DeferredSpinner from 'sonar-ui-common/components/ui/DeferredSpinner';\nimport MandatoryFieldMarker from 'sonar-ui-common/components/ui/MandatoryFieldMarker';\nimport MandatoryFieldsExplanation from 'sonar-ui-common/components/ui/MandatoryFieldsExplanation';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport { AlmSettingsInstance, ProjectAlmBindingResponse } from '../../../../types/alm-settings';\nimport AlmSpecificForm from './AlmSpecificForm';\n\nexport interface PRDecorationBindingRendererProps {\n  formData: T.Omit<ProjectAlmBindingResponse, 'alm'>;\n  instances: AlmSettingsInstance[];\n  isChanged: boolean;\n  isConfigured: boolean;\n  isValid: boolean;\n  loading: boolean;\n  onFieldChange: (id: keyof ProjectAlmBindingResponse, value: string | boolean) => void;\n  onReset: () => void;\n  onSubmit: () => void;\n  saving: boolean;\n  success: boolean;\n  monorepoEnabled: boolean;\n}\n\nfunction optionRenderer(instance: AlmSettingsInstance) {\n  return instance.url ? (\n    <>\n      <span>{instance.key} — </span>\n      <span className=\"text-muted\">{instance.url}</span>\n    </>\n  ) : (\n    <span>{instance.key}</span>\n  );\n}\n\nexport default function PRDecorationBindingRenderer(props: PRDecorationBindingRendererProps) {\n  const {\n    formData,\n    instances,\n    isChanged,\n    isConfigured,\n    isValid,\n    loading,\n    saving,\n    success,\n    monorepoEnabled\n  } = props;\n\n  if (loading) {\n    return <DeferredSpinner />;\n  }\n\n  if (instances.length < 1) {\n    return (\n      <div>\n        <Alert className=\"spacer-top huge-spacer-bottom\" variant=\"info\">\n          <FormattedMessage\n            defaultMessage={translate('settings.pr_decoration.binding.no_bindings')}\n            id=\"settings.pr_decoration.binding.no_bindings\"\n            values={{\n              link: (\n                <Link to=\"/documentation/analysis/pull-request/#pr-decoration\">\n                  {translate('learn_more')}\n                </Link>\n              )\n            }}\n          />\n        </Alert>\n      </div>\n    );\n  }\n\n  const selected = formData.key && instances.find(i => i.key === formData.key);\n  const alm = selected && selected.alm;\n\n  return (\n    <div>\n      <header className=\"page-header\">\n        <h1 className=\"page-title\">{translate('settings.pr_decoration.binding.title')}</h1>\n      </header>\n\n      <div className=\"markdown small spacer-top big-spacer-bottom\">\n        {translate('settings.pr_decoration.binding.description')}\n      </div>\n\n      <form\n        onSubmit={(event: React.SyntheticEvent<HTMLFormElement>) => {\n          event.preventDefault();\n          props.onSubmit();\n        }}>\n        <MandatoryFieldsExplanation className=\"form-field\" />\n\n        <div className=\"form-field\">\n          <label htmlFor=\"name\">\n            {translate('settings.pr_decoration.binding.form.name')}\n            <MandatoryFieldMarker className=\"spacer-right\" />\n          </label>\n          <Select\n            autosize={true}\n            className=\"abs-width-400\"\n            clearable={false}\n            id=\"name\"\n            menuContainerStyle={{\n              maxWidth: '210%' /* Allow double the width of the select */,\n              width: 'auto'\n            }}\n            onChange={(instance: AlmSettingsInstance) => props.onFieldChange('key', instance.key)}\n            optionRenderer={optionRenderer}\n            options={instances}\n            searchable={false}\n            value={formData.key}\n            valueKey=\"key\"\n            valueRenderer={optionRenderer}\n          />\n        </div>\n\n        {alm && (\n          <AlmSpecificForm\n            alm={alm}\n            formData={formData}\n            onFieldChange={props.onFieldChange}\n            monorepoEnabled={monorepoEnabled}\n          />\n        )}\n\n        <div className=\"display-flex-center\">\n          <DeferredSpinner className=\"spacer-right\" loading={saving} />\n          {isChanged && (\n            <SubmitButton className=\"spacer-right button-success\" disabled={saving || !isValid}>\n              <span data-test=\"project-settings__alm-save\">{translate('save')}</span>\n            </SubmitButton>\n          )}\n          {isConfigured && (\n            <Button className=\"spacer-right\" onClick={props.onReset}>\n              <span data-test=\"project-settings__alm-reset\">{translate('reset_verb')}</span>\n            </Button>\n          )}\n          {!saving && success && (\n            <span className=\"text-success\">\n              <AlertSuccessIcon className=\"spacer-right\" />\n              {translate('settings.state.saved')}\n            </span>\n          )}\n        </div>\n      </form>\n    </div>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { HttpStatus } from 'sonar-ui-common/helpers/request';\nimport {\n  deleteProjectAlmBinding,\n  getAlmSettings,\n  getProjectAlmBinding,\n  setProjectAzureBinding,\n  setProjectBitbucketBinding,\n  setProjectBitbucketCloudBinding,\n  setProjectGithubBinding,\n  setProjectGitlabBinding\n} from '../../../../api/alm-settings';\nimport throwGlobalError from '../../../../app/utils/throwGlobalError';\nimport { getAppState, Store } from '../../../../store/rootReducer';\nimport {\n  AlmKeys,\n  AlmSettingsInstance,\n  ProjectAlmBindingResponse\n} from '../../../../types/alm-settings';\nimport { EditionKey } from '../../../../types/editions';\nimport PRDecorationBindingRenderer from './PRDecorationBindingRenderer';\n\ntype FormData = T.Omit<ProjectAlmBindingResponse, 'alm'>;\n\ninterface StateProps {\n  monorepoEnabled: boolean;\n}\n\ninterface Props {\n  component: T.Component;\n}\n\ninterface State {\n  formData: FormData;\n  instances: AlmSettingsInstance[];\n  isChanged: boolean;\n  isConfigured: boolean;\n  isValid: boolean;\n  loading: boolean;\n  orignalData?: FormData;\n  saving: boolean;\n  success: boolean;\n}\n\nconst REQUIRED_FIELDS_BY_ALM: {\n  [almKey in AlmKeys]: Array<keyof T.Omit<FormData, 'key'>>;\n} = {\n  [AlmKeys.Azure]: ['repository', 'slug'],\n  [AlmKeys.BitbucketServer]: ['repository', 'slug'],\n  [AlmKeys.BitbucketCloud]: ['repository'],\n  [AlmKeys.GitHub]: ['repository'],\n  [AlmKeys.GitLab]: ['repository']\n};\n\nexport class PRDecorationBinding extends React.PureComponent<Props & StateProps, State> {\n  mounted = false;\n  state: State = {\n    formData: { key: '', monorepo: false },\n    instances: [],\n    isChanged: false,\n    isConfigured: false,\n    isValid: false,\n    loading: true,\n    saving: false,\n    success: false\n  };\n\n  componentDidMount() {\n    this.mounted = true;\n    this.fetchDefinitions();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetchDefinitions = () => {\n    const project = this.props.component.key;\n    return Promise.all([getAlmSettings(project), this.getProjectBinding(project)])\n      .then(([instances, originalData]) => {\n        if (this.mounted) {\n          this.setState(({ formData }) => {\n            const newFormData = originalData || formData;\n            return {\n              formData: newFormData,\n              instances: instances || [],\n              isChanged: false,\n              isConfigured: !!originalData,\n              isValid: this.validateForm(newFormData),\n              loading: false,\n              orignalData: newFormData\n            };\n          });\n        }\n      })\n      .catch(() => {\n        if (this.mounted) {\n          this.setState({ loading: false });\n        }\n      });\n  };\n\n  getProjectBinding(project: string): Promise<ProjectAlmBindingResponse | undefined> {\n    return getProjectAlmBinding(project).catch((response: Response) => {\n      if (response && response.status === HttpStatus.NotFound) {\n        return undefined;\n      }\n      return throwGlobalError(response);\n    });\n  }\n\n  catchError = () => {\n    if (this.mounted) {\n      this.setState({ saving: false });\n    }\n  };\n\n  handleReset = () => {\n    const { component } = this.props;\n    this.setState({ saving: true });\n    deleteProjectAlmBinding(component.key)\n      .then(() => {\n        if (this.mounted) {\n          this.setState({\n            formData: {\n              key: '',\n              repository: '',\n              slug: '',\n              monorepo: false\n            },\n            orignalData: undefined,\n            isChanged: false,\n            isConfigured: false,\n            saving: false,\n            success: true\n          });\n        }\n      })\n      .catch(this.catchError);\n  };\n\n  submitProjectAlmBinding(\n    alm: AlmKeys,\n    key: string,\n    almSpecificFields?: T.Omit<FormData, 'key'>\n  ): Promise<void> {\n    const almSetting = key;\n    const project = this.props.component.key;\n    const repository = almSpecificFields?.repository;\n    const slug = almSpecificFields?.slug;\n    const monorepo = almSpecificFields?.monorepo ?? false;\n\n    if (!repository) {\n      return Promise.reject();\n    }\n\n    switch (alm) {\n      case AlmKeys.Azure: {\n        if (!slug) {\n          return Promise.reject();\n        }\n        return setProjectAzureBinding({\n          almSetting,\n          project,\n          projectName: slug,\n          repositoryName: repository,\n          monorepo\n        });\n      }\n      case AlmKeys.BitbucketServer: {\n        if (!slug) {\n          return Promise.reject();\n        }\n        return setProjectBitbucketBinding({\n          almSetting,\n          project,\n          repository,\n          slug,\n          monorepo\n        });\n      }\n      case AlmKeys.BitbucketCloud: {\n        return setProjectBitbucketCloudBinding({\n          almSetting,\n          project,\n          repository,\n          monorepo\n        });\n      }\n      case AlmKeys.GitHub: {\n        // By default it must remain true.\n        const summaryCommentEnabled = almSpecificFields?.summaryCommentEnabled ?? true;\n        return setProjectGithubBinding({\n          almSetting,\n          project,\n          repository,\n          summaryCommentEnabled,\n          monorepo\n        });\n      }\n\n      case AlmKeys.GitLab: {\n        return setProjectGitlabBinding({\n          almSetting,\n          project,\n          repository,\n          monorepo\n        });\n      }\n\n      default:\n        return Promise.reject();\n    }\n  }\n\n  handleSubmit = () => {\n    this.setState({ saving: true });\n    const {\n      formData: { key, ...additionalFields },\n      instances\n    } = this.state;\n\n    const selected = instances.find(i => i.key === key);\n    if (!key || !selected) {\n      return;\n    }\n\n    this.submitProjectAlmBinding(selected.alm, key, additionalFields)\n      .then(() => {\n        if (this.mounted) {\n          this.setState({\n            saving: false,\n            success: true\n          });\n        }\n      })\n      .then(this.fetchDefinitions)\n      .catch(this.catchError);\n  };\n\n  isDataSame(\n    { key, repository = '', slug = '', summaryCommentEnabled = false, monorepo = false }: FormData,\n    {\n      key: oKey = '',\n      repository: oRepository = '',\n      slug: oSlug = '',\n      summaryCommentEnabled: osummaryCommentEnabled = false,\n      monorepo: omonorepo = false\n    }: FormData\n  ) {\n    return (\n      key === oKey &&\n      repository === oRepository &&\n      slug === oSlug &&\n      summaryCommentEnabled === osummaryCommentEnabled &&\n      monorepo === omonorepo\n    );\n  }\n\n  handleFieldChange = (id: keyof ProjectAlmBindingResponse, value: string | boolean) => {\n    this.setState(({ formData, orignalData }) => {\n      const newFormData = {\n        ...formData,\n        [id]: value\n      };\n\n      return {\n        formData: newFormData,\n        isValid: this.validateForm(newFormData),\n        isChanged: !this.isDataSame(newFormData, orignalData || { key: '', monorepo: false }),\n        success: false\n      };\n    });\n  };\n\n  validateForm = ({ key, ...additionalFields }: State['formData']) => {\n    const { instances } = this.state;\n    const selected = instances.find(i => i.key === key);\n    if (!key || !selected) {\n      return false;\n    }\n    return REQUIRED_FIELDS_BY_ALM[selected.alm].reduce(\n      (result: boolean, field) => result && Boolean(additionalFields[field]),\n      true\n    );\n  };\n\n  render() {\n    const { monorepoEnabled } = this.props;\n\n    return (\n      <PRDecorationBindingRenderer\n        onFieldChange={this.handleFieldChange}\n        onReset={this.handleReset}\n        onSubmit={this.handleSubmit}\n        monorepoEnabled={monorepoEnabled}\n        {...this.state}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store): StateProps => ({\n  // This feature trigger will be replaced when SONAR-14349 is implemented\n  monorepoEnabled: [EditionKey.enterprise, EditionKey.datacenter].includes(\n    getAppState(state).edition as EditionKey\n  )\n});\n\nexport default connect(mapStateToProps)(PRDecorationBinding);\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  ALM_INTEGRATION,\n  ANALYSIS_SCOPE_CATEGORY,\n  LANGUAGES_CATEGORY,\n  NEW_CODE_PERIOD_CATEGORY,\n  PULL_REQUEST_DECORATION_BINDING_CATEGORY\n} from './AdditionalCategoryKeys';\nimport AlmIntegration from './almIntegration/AlmIntegration';\nimport { AnalysisScope } from './AnalysisScope';\nimport Languages from './Languages';\nimport NewCodePeriod from './NewCodePeriod';\nimport PullRequestDecorationBinding from './pullRequestDecorationBinding/PRDecorationBinding';\n\nexport interface AdditionalCategoryComponentProps {\n  component: T.Component | undefined;\n  selectedCategory: string;\n}\n\nexport interface AdditionalCategory {\n  availableGlobally: boolean;\n  availableForProject: boolean;\n  displayTab: boolean;\n  key: string;\n  name: string;\n  renderComponent: (props: AdditionalCategoryComponentProps) => React.ReactNode;\n  requiresBranchesEnabled?: boolean;\n}\n\nexport const ADDITIONAL_CATEGORIES: AdditionalCategory[] = [\n  {\n    key: LANGUAGES_CATEGORY,\n    name: translate('property.category.languages'),\n    renderComponent: getLanguagesComponent,\n    availableGlobally: true,\n    availableForProject: true,\n    displayTab: true\n  },\n  {\n    key: NEW_CODE_PERIOD_CATEGORY,\n    name: translate('settings.new_code_period.category'),\n    renderComponent: getNewCodePeriodComponent,\n    availableGlobally: true,\n    availableForProject: false,\n    displayTab: true\n  },\n  {\n    key: ANALYSIS_SCOPE_CATEGORY,\n    name: translate('property.category.exclusions'),\n    renderComponent: getAnalysisScopeComponent,\n    availableGlobally: true,\n    availableForProject: true,\n    displayTab: false\n  },\n  {\n    key: ALM_INTEGRATION,\n    name: translate('property.category.almintegration'),\n    renderComponent: getAlmIntegrationComponent,\n    availableGlobally: true,\n    availableForProject: false,\n    displayTab: false\n  },\n  {\n    key: PULL_REQUEST_DECORATION_BINDING_CATEGORY,\n    name: translate('settings.pr_decoration.binding.category'),\n    renderComponent: getPullRequestDecorationBindingComponent,\n    availableGlobally: false,\n    availableForProject: true,\n    displayTab: true,\n    requiresBranchesEnabled: true\n  }\n];\n\nfunction getLanguagesComponent(props: AdditionalCategoryComponentProps) {\n  return <Languages {...props} />;\n}\n\nfunction getNewCodePeriodComponent() {\n  return <NewCodePeriod />;\n}\n\nfunction getAnalysisScopeComponent(props: AdditionalCategoryComponentProps) {\n  return <AnalysisScope {...props} />;\n}\n\nfunction getAlmIntegrationComponent(props: AdditionalCategoryComponentProps) {\n  return <AlmIntegration {...props} />;\n}\n\nfunction getPullRequestDecorationBindingComponent(props: AdditionalCategoryComponentProps) {\n  return props.component && <PullRequestDecorationBinding component={props.component} />;\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as classNames from 'classnames';\nimport { sortBy } from 'lodash';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { IndexLink } from 'react-router';\nimport { getAppState, getSettingsAppAllCategories, Store } from '../../../store/rootReducer';\nimport { getCategoryName } from '../utils';\nimport { ADDITIONAL_CATEGORIES } from './AdditionalCategories';\nimport CATEGORY_OVERRIDES from './CategoryOverrides';\n\nexport interface CategoriesListProps {\n  branchesEnabled?: boolean;\n  categories: string[];\n  component?: T.Component;\n  defaultCategory: string;\n  selectedCategory: string;\n}\n\nexport function CategoriesList(props: CategoriesListProps) {\n  const { branchesEnabled, categories, component, defaultCategory, selectedCategory } = props;\n  const pathname = component ? '/project/settings' : '/settings';\n\n  const categoriesWithName = categories\n    .filter(key => !CATEGORY_OVERRIDES[key.toLowerCase()])\n    .map(key => ({\n      key,\n      name: getCategoryName(key)\n    }))\n    .concat(\n      ADDITIONAL_CATEGORIES.filter(c => c.displayTab)\n        .filter(c =>\n          component\n            ? // Project settings\n              c.availableForProject\n            : // Global settings\n              c.availableGlobally\n        )\n        .filter(c => branchesEnabled || !c.requiresBranchesEnabled)\n    );\n  const sortedCategories = sortBy(categoriesWithName, category => category.name.toLowerCase());\n\n  return (\n    <ul className=\"side-tabs-menu\">\n      {sortedCategories.map(category => (\n        <li key={category.key}>\n          <IndexLink\n            className={classNames({\n              active: category.key.toLowerCase() === selectedCategory.toLowerCase()\n            })}\n            title={category.name}\n            to={{\n              pathname,\n              query: {\n                category: category.key !== defaultCategory ? category.key.toLowerCase() : undefined,\n                id: component && component.key\n              }\n            }}>\n            {category.name}\n          </IndexLink>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nconst mapStateToProps = (state: Store) => ({\n  categories: getSettingsAppAllCategories(state),\n  branchesEnabled: getAppState(state).branchesEnabled\n});\n\nexport default connect(mapStateToProps)(CategoriesList);\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport InstanceMessage from '../../../components/common/InstanceMessage';\n\nexport interface PageHeaderProps {\n  component?: T.Component;\n}\n\nexport default function PageHeader({ component }: PageHeaderProps) {\n  const title = component ? translate('project_settings.page') : translate('settings.page');\n\n  const description = component ? (\n    translate('project_settings.page.description')\n  ) : (\n    <InstanceMessage message={translate('settings.page.description')} />\n  );\n\n  return (\n    <header className=\"top-bar-outer\">\n      <div className=\"top-bar\">\n        <div className=\"top-bar-inner bordered-bottom big-padded-top padded-bottom\">\n          <h1 className=\"page-title\">{title}</h1>\n          <div className=\"page-description spacer-top\">{description}</div>\n        </div>\n      </div>\n    </header>\n  );\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { find } from 'lodash';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { connect } from 'react-redux';\nimport { WithRouterProps } from 'react-router';\nimport { translate } from 'sonar-ui-common/helpers/l10n';\nimport {\n  addSideBarClass,\n  addWhitePageClass,\n  removeSideBarClass,\n  removeWhitePageClass\n} from 'sonar-ui-common/helpers/pages';\nimport Suggestions from '../../../app/components/embed-docs-modal/Suggestions';\nimport ScreenPositionHelper from '../../../components/common/ScreenPositionHelper';\nimport { getSettingsAppDefaultCategory, Store } from '../../../store/rootReducer';\nimport { fetchSettings } from '../store/actions';\nimport '../styles.css';\nimport { ADDITIONAL_CATEGORIES } from './AdditionalCategories';\nimport AllCategoriesList from './AllCategoriesList';\nimport CategoryDefinitionsList from './CategoryDefinitionsList';\nimport CATEGORY_OVERRIDES from './CategoryOverrides';\nimport PageHeader from './PageHeader';\n\ninterface Props {\n  component?: T.Component;\n  defaultCategory: string;\n  fetchSettings(component?: string): Promise<void>;\n}\n\ninterface State {\n  loading: boolean;\n}\n\nexport class App extends React.PureComponent<Props & WithRouterProps, State> {\n  mounted = false;\n  state: State = { loading: true };\n\n  componentDidMount() {\n    this.mounted = true;\n    addSideBarClass();\n    addWhitePageClass();\n    this.fetchSettings();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.component !== this.props.component) {\n      this.fetchSettings();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    removeSideBarClass();\n    removeWhitePageClass();\n  }\n\n  fetchSettings = () => {\n    const { component } = this.props;\n    this.props.fetchSettings(component && component.key).then(this.stopLoading, this.stopLoading);\n  };\n\n  stopLoading = () => {\n    if (this.mounted) {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    if (this.state.loading) {\n      return null;\n    }\n\n    const { query } = this.props.location;\n    const originalCategory = (query.category as string) || this.props.defaultCategory;\n    const overriddenCategory = CATEGORY_OVERRIDES[originalCategory.toLowerCase()];\n    const selectedCategory = overriddenCategory || originalCategory;\n    const foundAdditionalCategory = find(ADDITIONAL_CATEGORIES, c => c.key === selectedCategory);\n    const isProjectSettings = this.props.component;\n    const shouldRenderAdditionalCategory =\n      foundAdditionalCategory &&\n      ((isProjectSettings && foundAdditionalCategory.availableForProject) ||\n        (!isProjectSettings && foundAdditionalCategory.availableGlobally));\n\n    return (\n      <div id=\"settings-page\">\n        <Suggestions suggestions=\"settings\" />\n        <Helmet defer={false} title={translate('settings.page')} />\n        <PageHeader component={this.props.component} />\n\n        <div className=\"layout-page\">\n          <ScreenPositionHelper className=\"layout-page-side-outer\">\n            {({ top }) => (\n              <div className=\"layout-page-side\" style={{ top }}>\n                <div className=\"layout-page-side-inner\">\n                  <AllCategoriesList\n                    component={this.props.component}\n                    defaultCategory={this.props.defaultCategory}\n                    selectedCategory={selectedCategory}\n                  />\n                </div>\n              </div>\n            )}\n          </ScreenPositionHelper>\n\n          <div className=\"layout-page-main\">\n            <div className=\"layout-page-main-inner\">\n              <div className=\"big-padded\">\n                {foundAdditionalCategory && shouldRenderAdditionalCategory ? (\n                  foundAdditionalCategory.renderComponent({\n                    component: this.props.component,\n                    selectedCategory: originalCategory\n                  })\n                ) : (\n                  <CategoryDefinitionsList\n                    category={selectedCategory}\n                    component={this.props.component}\n                  />\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: Store) => ({\n  defaultCategory: getSettingsAppDefaultCategory(state)\n});\n\nconst mapDispatchToProps = { fetchSettings: fetchSettings as any };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport * as React from 'react';\nimport { SuggestionsContext } from './SuggestionsContext';\n\ninterface Props {\n  suggestions: string;\n}\n\nexport default function Suggestions({ suggestions }: Props) {\n  return (\n    <SuggestionsContext.Consumer>\n      {({ addSuggestions, removeSuggestions }) => (\n        <SuggestionsInner\n          addSuggestions={addSuggestions}\n          removeSuggestions={removeSuggestions}\n          suggestions={suggestions}\n        />\n      )}\n    </SuggestionsContext.Consumer>\n  );\n}\n\ninterface SuggestionsInnerProps {\n  addSuggestions: (key: string) => void;\n  removeSuggestions: (key: string) => void;\n  suggestions: string;\n}\n\nclass SuggestionsInner extends React.PureComponent<SuggestionsInnerProps> {\n  componentDidMount() {\n    this.props.addSuggestions(this.props.suggestions);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.suggestions !== this.props.suggestions) {\n      this.props.removeSuggestions(this.props.suggestions);\n      this.props.addSuggestions(prevProps.suggestions);\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.removeSuggestions(this.props.suggestions);\n  }\n\n  render() {\n    return null;\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { sanitize } from 'dompurify';\n\nexport function sanitizeStringRestricted(html: string) {\n  return sanitize(html, {\n    ALLOWED_TAGS: ['b', 'br', 'code', 'i', 'li', 'p', 'strong', 'ul', 'a'],\n    ALLOWED_ATTR: ['target', 'href']\n  });\n}\n\nexport function sanitizeString(html: string) {\n  return sanitize(html, { USE_PROFILES: { html: true } });\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { debounce } from 'lodash';\nimport * as React from 'react';\n\ninterface Props {\n  className?: string;\n  children: (position: { top: number; left: number }) => React.ReactElement<any>;\n}\n\nexport default class ScreenPositionHelper extends React.PureComponent<Props> {\n  container?: HTMLDivElement;\n  debouncedOnResize: () => void;\n\n  constructor(props: Props) {\n    super(props);\n    this.debouncedOnResize = debounce(() => this.forceUpdate(), 250);\n  }\n\n  componentDidMount() {\n    this.forceUpdate();\n    window.addEventListener('resize', this.debouncedOnResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.debouncedOnResize);\n  }\n\n  getPosition = () => {\n    const containerPos = this.container && this.container.getBoundingClientRect();\n    if (!containerPos) {\n      return { top: 0, left: 0 };\n    }\n    return {\n      top: window.pageYOffset + containerPos.top,\n      left: window.pageXOffset + containerPos.left\n    };\n  };\n\n  render() {\n    return (\n      <div\n        className={this.props.className}\n        ref={container => (this.container = container as HTMLDivElement)}>\n        {this.props.children(this.getPosition())}\n      </div>\n    );\n  }\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { omitBy } from 'lodash';\nimport { getJSON, post, postJSON, RequestData } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport { isCategoryDefinition } from '../apps/settings/utils';\nimport { BranchParameters } from '../types/branch-like';\nimport { SettingCategoryDefinition, SettingDefinition, SettingValue } from '../types/settings';\n\nexport function getDefinitions(component?: string): Promise<SettingCategoryDefinition[]> {\n  return getJSON('/api/settings/list_definitions', { component }).then(\n    r => r.definitions,\n    throwGlobalError\n  );\n}\n\nexport function getValues(\n  data: { keys: string; component?: string } & BranchParameters\n): Promise<SettingValue[]> {\n  return getJSON('/api/settings/values', data).then(r => r.settings);\n}\n\nexport function setSettingValue(\n  definition: SettingDefinition,\n  value: any,\n  component?: string\n): Promise<void> {\n  const { key } = definition;\n  const data: RequestData = { key, component };\n\n  if (isCategoryDefinition(definition) && definition.multiValues) {\n    data.values = value;\n  } else if (definition.type === 'PROPERTY_SET') {\n    data.fieldValues = value\n      .map((fields: any) => omitBy(fields, value => value == null))\n      .map(JSON.stringify);\n  } else {\n    data.value = value;\n  }\n\n  return post('/api/settings/set', data);\n}\n\nexport function setSimpleSettingValue(\n  data: { component?: string; value: string; key: string } & BranchParameters\n): Promise<void | Response> {\n  return post('/api/settings/set', data).catch(throwGlobalError);\n}\n\nexport function resetSettingValue(\n  data: { keys: string; component?: string } & BranchParameters\n): Promise<void> {\n  return post('/api/settings/reset', data);\n}\n\nexport function sendTestEmail(to: string, subject: string, message: string): Promise<void> {\n  return post('/api/emails/send', { to, subject, message });\n}\n\nexport function checkSecretKey(): Promise<{ secretKeyAvailable: boolean }> {\n  return getJSON('/api/settings/check_secret_key').catch(throwGlobalError);\n}\n\nexport function generateSecretKey(): Promise<{ secretKey: string }> {\n  return postJSON('/api/settings/generate_secret_key').catch(throwGlobalError);\n}\n\nexport function encryptValue(value: string): Promise<{ encryptedValue: string }> {\n  return postJSON('/api/settings/encrypt', { value }).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nimport { get, getJSON, HttpStatus, parseError, post } from 'sonar-ui-common/helpers/request';\nimport throwGlobalError from '../app/utils/throwGlobalError';\nimport {\n  AlmSettingsBindingDefinitions,\n  AlmSettingsInstance,\n  AzureBindingDefinition,\n  AzureProjectAlmBindingParams,\n  BitbucketBindingDefinition,\n  BitbucketCloudBindingDefinition,\n  BitbucketCloudProjectAlmBindingParams,\n  BitbucketProjectAlmBindingParams,\n  GithubBindingDefinition,\n  GithubProjectAlmBindingParams,\n  GitlabBindingDefinition,\n  GitlabProjectAlmBindingParams,\n  ProjectAlmBindingResponse\n} from '../types/alm-settings';\n\nexport function getAlmDefinitions(): Promise<AlmSettingsBindingDefinitions> {\n  return getJSON('/api/alm_settings/list_definitions');\n}\n\nexport function getAlmSettings(project?: string): Promise<AlmSettingsInstance[]> {\n  return getAlmSettingsNoCatch(project).catch(throwGlobalError);\n}\n\nexport function getAlmSettingsNoCatch(project?: string): Promise<AlmSettingsInstance[]> {\n  return getJSON('/api/alm_settings/list', { project }).then(({ almSettings }) => almSettings);\n}\n\nexport function validateAlmSettings(key: string): Promise<string> {\n  return get('/api/alm_settings/validate', { key })\n    .then(() => {\n      return '';\n    })\n    .catch((response: Response) => {\n      if (response.status === HttpStatus.BadRequest) {\n        return parseError(response);\n      } else {\n        return throwGlobalError(response);\n      }\n    });\n}\n\nexport function createGithubConfiguration(data: GithubBindingDefinition) {\n  return post('/api/alm_settings/create_github', data).catch(throwGlobalError);\n}\n\nexport function updateGithubConfiguration(data: GithubBindingDefinition & { newKey: string }) {\n  return post('/api/alm_settings/update_github', data).catch(throwGlobalError);\n}\n\nexport function createAzureConfiguration(data: AzureBindingDefinition) {\n  return post('/api/alm_settings/create_azure', data).catch(throwGlobalError);\n}\n\nexport function updateAzureConfiguration(data: AzureBindingDefinition & { newKey: string }) {\n  return post('/api/alm_settings/update_azure', data).catch(throwGlobalError);\n}\n\nexport function createBitbucketConfiguration(data: BitbucketBindingDefinition) {\n  return post('/api/alm_settings/create_bitbucket', data).catch(throwGlobalError);\n}\n\nexport function updateBitbucketConfiguration(\n  data: BitbucketBindingDefinition & { newKey: string }\n) {\n  return post('/api/alm_settings/update_bitbucket', data).catch(throwGlobalError);\n}\n\nexport function createBitbucketCloudConfiguration(data: BitbucketCloudBindingDefinition) {\n  return post('/api/alm_settings/create_bitbucketcloud', data).catch(throwGlobalError);\n}\n\nexport function updateBitbucketCloudConfiguration(\n  data: BitbucketCloudBindingDefinition & { newKey: string }\n) {\n  return post('/api/alm_settings/update_bitbucketcloud', data).catch(throwGlobalError);\n}\n\nexport function createGitlabConfiguration(data: GitlabBindingDefinition) {\n  return post('/api/alm_settings/create_gitlab', data).catch(throwGlobalError);\n}\n\nexport function updateGitlabConfiguration(data: GitlabBindingDefinition & { newKey: string }) {\n  return post('/api/alm_settings/update_gitlab', data).catch(throwGlobalError);\n}\n\nexport function deleteConfiguration(key: string) {\n  return post('/api/alm_settings/delete', { key }).catch(throwGlobalError);\n}\n\nexport function countBindedProjects(almSetting: string) {\n  return getJSON('/api/alm_settings/count_binding', { almSetting })\n    .then(({ projects }) => projects)\n    .catch(throwGlobalError);\n}\n\nexport function getProjectAlmBinding(project: string): Promise<ProjectAlmBindingResponse> {\n  return getJSON('/api/alm_settings/get_binding', { project });\n}\n\nexport function deleteProjectAlmBinding(project: string): Promise<void> {\n  return post('/api/alm_settings/delete_binding', { project }).catch(throwGlobalError);\n}\n\nexport function setProjectAzureBinding(data: AzureProjectAlmBindingParams) {\n  return post('/api/alm_settings/set_azure_binding', data).catch(throwGlobalError);\n}\n\nexport function setProjectBitbucketBinding(data: BitbucketProjectAlmBindingParams) {\n  return post('/api/alm_settings/set_bitbucket_binding', data).catch(throwGlobalError);\n}\n\nexport function setProjectBitbucketCloudBinding(data: BitbucketCloudProjectAlmBindingParams) {\n  return post('/api/alm_settings/set_bitbucketcloud_binding', data).catch(throwGlobalError);\n}\n\nexport function setProjectGithubBinding(data: GithubProjectAlmBindingParams) {\n  return post('/api/alm_settings/set_github_binding', data).catch(throwGlobalError);\n}\n\nexport function setProjectGitlabBinding(data: GitlabProjectAlmBindingParams) {\n  return post('/api/alm_settings/set_gitlab_binding', data).catch(throwGlobalError);\n}\n","/*\n * SonarQube\n * Copyright (C) 2009-2022 SonarSource SA\n * mailto:info AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\nexport const ALM_INTEGRATION = 'almintegration';\nexport const ANALYSIS_SCOPE_CATEGORY = 'exclusions';\nexport const LANGUAGES_CATEGORY = 'languages';\nexport const NEW_CODE_PERIOD_CATEGORY = 'new_code_period';\nexport const PULL_REQUEST_DECORATION_BINDING_CATEGORY = 'pull_request_decoration_binding';\n"],"sourceRoot":""}